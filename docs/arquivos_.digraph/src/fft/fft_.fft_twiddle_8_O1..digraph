graph 1 19.306 58.476
node Node0x2972e970 13.431 58.15 2.6389 0.65278 "{8:\l|  br label %tailrecurse\l}" filled record #3d50c3ff #d6524470
node Node0x295bf500 13.431 56.525 4.9306 1.5972 "{tailrecurse:\l|  %.tr = phi i32 [ %0, %8 ], [ %211, %209 ]\l  %9 = sub nsw i32 %1, %.tr\l  %10 = icmp slt i32 %9, 128\l  br i1 %\
10, label %11, label %209\l|{<s0>T|<s1>F}}" filled record #b70d28ff #b70d2870
node Node0x295c7500 7.1944 54.379 5.1528 1.1806 "{11:\l|  %12 = icmp slt i32 %.tr, %1\l  br i1 %12, label %.lr.ph, label %.loopexit\l|{<s0>T|<s1>F}}" filled record #3d50c3ff #d6524470
node Node0x295c7550 14.667 54.379 9.2778 1.6944 "{209:\l|  %210 = add nsw i32 %1, %.tr\l  %211 = sdiv i32 %210, 2\l  tail call void @fft_twiddle_8(i32 noundef %.tr, i32 noundef %\
211, ptr\l... noundef %2, ptr noundef %3, ptr noundef %4, i32 noundef %5, i32 noundef %6,\l... i32 noundef %7)\l  br label %tailrecurse\l}" filled record #b70d28ff #b70d2870
node Node0x295c8dd0 5.1667 50.726 7.3333 4.6111 "{.lr.ph:\l|  %13 = sext i32 %.tr to i64\l  %14 = getelementptr inbounds %struct.COMPLEX, ptr %3, i64 %13\l  %15 = mul i32 %6, %.tr\l  %\
16 = shl nsw i32 %7, 2\l  %17 = sext i32 %16 to i64\l  %18 = shl nsw i32 %7, 1\l  %19 = sext i32 %18 to i64\l  %20 = mul nsw i32 %\
7, 6\l  %21 = sext i32 %20 to i64\l  %22 = sext i32 %7 to i64\l  %23 = mul nsw i32 %7, 5\l  %24 = sext i32 %23 to i64\l  %25 = mul \
nsw i32 %7, 3\l  %26 = sext i32 %25 to i64\l  %27 = mul nsw i32 %7, 7\l  %28 = sext i32 %27 to i64\l  %29 = sext i32 %15 to i64\l  %\
30 = sext i32 %6 to i64\l  %wide.trip.count = sext i32 %1 to i64\l  br label %31\l}" filled record #3d50c3ff #dc5d4a70
node Node0x295e3530 6.0417 2.7888 1.375 0.65278 "{.loopexit:\l|  ret void\l}" filled record #3d50c3ff #d6524470
node Node0x295c7ee0 4.5833 25.768 9.1667 44.306 "{31:\l|  %indvars.iv289 = phi i64 [ %13, %.lr.ph ], [ %indvars.iv.next290, %31 ]\l  %indvars.iv = phi i64 [ %29, %.lr.ph ], [ %indvars.iv.next, %\
31 ]\l  %.0285286 = phi ptr [ %14, %.lr.ph ], [ %208, %31 ]\l  %32 = getelementptr inbounds %struct.COMPLEX, ptr %2, i64 %indvars.iv289\l  %\
33 = load double, ptr %32, align 8\l  %34 = getelementptr inbounds %struct.COMPLEX, ptr %2, i64 %indvars.iv289,\l... i32 1\l  %35 = \
load double, ptr %34, align 8\l  %36 = trunc i64 %indvars.iv to i32\l  %37 = shl nsw i32 %36, 2\l  %38 = sext i32 %37 to i64\l  %\
39 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %38\l  %40 = load double, ptr %39, align 8\l  %41 = getelementptr inbounds %\
struct.COMPLEX, ptr %4, i64 %38, i32 1\l  %42 = load double, ptr %41, align 8\l  %43 = getelementptr inbounds %struct.COMPLEX, ptr %\
32, i64 %17\l  %44 = load double, ptr %43, align 8\l  %45 = getelementptr inbounds %struct.COMPLEX, ptr %32, i64 %17, i32 1\l  %\
46 = load double, ptr %45, align 8\l  %47 = fneg double %42\l  %48 = fmul double %46, %47\l  %49 = tail call double @llvm.fmuladd.f64(\
double %40, double %44, double %48)\l  %50 = fmul double %40, %46\l  %51 = tail call double @llvm.fmuladd.f64(double %42, double %\
44, double %50)\l  %52 = fadd double %33, %49\l  %53 = fadd double %35, %51\l  %54 = fsub double %33, %49\l  %55 = fsub double %\
35, %51\l  %56 = trunc i64 %indvars.iv to i32\l  %57 = shl nsw i32 %56, 1\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds %\
struct.COMPLEX, ptr %4, i64 %58\l  %60 = load double, ptr %59, align 8\l  %61 = getelementptr inbounds %struct.COMPLEX, ptr %4, \
i64 %58, i32 1\l  %62 = load double, ptr %61, align 8\l  %63 = getelementptr inbounds %struct.COMPLEX, ptr %32, i64 %19\l  %64 = \
load double, ptr %63, align 8\l  %65 = getelementptr inbounds %struct.COMPLEX, ptr %32, i64 %19, i32 1\l  %66 = load double, ptr %\
65, align 8\l  %67 = fneg double %62\l  %68 = fmul double %66, %67\l  %69 = tail call double @llvm.fmuladd.f64(double %60, double %\
64, double %68)\l  %70 = fmul double %60, %66\l  %71 = tail call double @llvm.fmuladd.f64(double %62, double %64, double %70)\l  %\
72 = mul nsw i64 %indvars.iv, 6\l  %73 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %72\l  %74 = load double, ptr %73, \
align 8\l  %75 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %72, i32 1\l  %76 = load double, ptr %75, align 8\l  %77 = \
getelementptr inbounds %struct.COMPLEX, ptr %32, i64 %21\l  %78 = load double, ptr %77, align 8\l  %79 = getelementptr inbounds %\
struct.COMPLEX, ptr %32, i64 %21, i32 1\l  %80 = load double, ptr %79, align 8\l  %81 = fneg double %76\l  %82 = fmul double %80, %\
81\l  %83 = tail call double @llvm.fmuladd.f64(double %74, double %78, double %82)\l  %84 = fmul double %74, %80\l  %85 = tail call \
double @llvm.fmuladd.f64(double %76, double %78, double %84)\l  %86 = fadd double %69, %83\l  %87 = fadd double %71, %85\l  %88 = \
fsub double %69, %83\l  %89 = fsub double %71, %85\l  %90 = fadd double %52, %86\l  %91 = fadd double %53, %87\l  %92 = fsub double %\
52, %86\l  %93 = fsub double %53, %87\l  %94 = fadd double %54, %89\l  %95 = fsub double %55, %88\l  %96 = fsub double %54, %89\l  %\
97 = fadd double %55, %88\l  %98 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %indvars.iv\l  %99 = load double, ptr %98, \
align 8\l  %100 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %indvars.iv, i32 1\l  %101 = load double, ptr %100, align \
8\l  %102 = getelementptr inbounds %struct.COMPLEX, ptr %32, i64 %22\l  %103 = load double, ptr %102, align 8\l  %104 = getelementptr \
inbounds %struct.COMPLEX, ptr %32, i64 %22, i32 1\l  %105 = load double, ptr %104, align 8\l  %106 = fneg double %101\l  %107 = \
fmul double %105, %106\l  %108 = tail call double @llvm.fmuladd.f64(double %99, double %103, double\l... %107)\l  %109 = fmul double %\
99, %105\l  %110 = tail call double @llvm.fmuladd.f64(double %101, double %103, double\l... %109)\l  %111 = mul nsw i64 %indvars.iv, \
5\l  %112 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %111\l  %113 = load double, ptr %112, align 8\l  %114 = getelementptr \
inbounds %struct.COMPLEX, ptr %4, i64 %111, i32 1\l  %115 = load double, ptr %114, align 8\l  %116 = getelementptr inbounds %struct.COMPLEX, \
ptr %32, i64 %24\l  %117 = load double, ptr %116, align 8\l  %118 = getelementptr inbounds %struct.COMPLEX, ptr %32, i64 %24, i32 \
1\l  %119 = load double, ptr %118, align 8\l  %120 = fneg double %115\l  %121 = fmul double %119, %120\l  %122 = tail call double @\
llvm.fmuladd.f64(double %113, double %117, double\l... %121)\l  %123 = fmul double %113, %119\l  %124 = tail call double @llvm.fmuladd.f64(\
double %115, double %117, double\l... %123)\l  %125 = fadd double %108, %122\l  %126 = fadd double %110, %124\l  %127 = fsub double %\
108, %122\l  %128 = fsub double %110, %124\l  %129 = mul nsw i64 %indvars.iv, 3\l  %130 = getelementptr inbounds %struct.COMPLEX, \
ptr %4, i64 %129\l  %131 = load double, ptr %130, align 8\l  %132 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %129, i32 \
1\l  %133 = load double, ptr %132, align 8\l  %134 = getelementptr inbounds %struct.COMPLEX, ptr %32, i64 %26\l  %135 = load double, \
ptr %134, align 8\l  %136 = getelementptr inbounds %struct.COMPLEX, ptr %32, i64 %26, i32 1\l  %137 = load double, ptr %136, align \
8\l  %138 = fneg double %133\l  %139 = fmul double %137, %138\l  %140 = tail call double @llvm.fmuladd.f64(double %131, double %\
135, double\l... %139)\l  %141 = fmul double %131, %137\l  %142 = tail call double @llvm.fmuladd.f64(double %133, double %135, double\l... %\
141)\l  %143 = mul nsw i64 %indvars.iv, 7\l  %144 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %143\l  %145 = load double, \
ptr %144, align 8\l  %146 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %143, i32 1\l  %147 = load double, ptr %146, align \
8\l  %148 = getelementptr inbounds %struct.COMPLEX, ptr %32, i64 %28\l  %149 = load double, ptr %148, align 8\l  %150 = getelementptr \
inbounds %struct.COMPLEX, ptr %32, i64 %28, i32 1\l  %151 = load double, ptr %150, align 8\l  %152 = fneg double %147\l  %153 = \
fmul double %151, %152\l  %154 = tail call double @llvm.fmuladd.f64(double %145, double %149, double\l... %153)\l  %155 = fmul double %\
145, %151\l  %156 = tail call double @llvm.fmuladd.f64(double %147, double %149, double\l... %155)\l  %157 = fadd double %140, %\
154\l  %158 = fadd double %142, %156\l  %159 = fsub double %140, %154\l  %160 = fsub double %142, %156\l  %161 = fadd double %125, %\
157\l  %162 = fadd double %126, %158\l  %163 = fsub double %125, %157\l  %164 = fsub double %126, %158\l  %165 = fadd double %127, %\
160\l  %166 = fsub double %128, %159\l  %167 = fsub double %127, %160\l  %168 = fadd double %128, %159\l  %169 = fadd double %90, %\
161\l  store double %169, ptr %.0285286, align 8\l  %170 = fadd double %91, %162\l  %171 = getelementptr inbounds %struct.COMPLEX, \
ptr %.0285286, i64 0, i32 1\l  store double %170, ptr %171, align 8\l  %172 = fsub double %90, %161\l  %173 = getelementptr inbounds %\
struct.COMPLEX, ptr %.0285286, i64 %17\l  store double %172, ptr %173, align 8\l  %174 = fsub double %91, %162\l  %175 = getelementptr \
inbounds %struct.COMPLEX, ptr %.0285286, i64 %17, i32 1\l  store double %174, ptr %175, align 8\l  %176 = fadd double %165, %166\l  %\
177 = fmul double %176, 0x3FE6A09E667F4BB8\l  %178 = fsub double %166, %165\l  %179 = fmul double %178, 0x3FE6A09E667F4BB8\l  %180 = \
fadd double %94, %177\l  %181 = getelementptr inbounds %struct.COMPLEX, ptr %.0285286, i64 %22\l  store double %180, ptr %181, align \
8\l  %182 = fadd double %95, %179\l  %183 = getelementptr inbounds %struct.COMPLEX, ptr %.0285286, i64 %22, i32 1\l  store double %\
182, ptr %183, align 8\l  %184 = fsub double %94, %177\l  %185 = getelementptr inbounds %struct.COMPLEX, ptr %.0285286, i64 %24\l  \
store double %184, ptr %185, align 8\l  %186 = fsub double %95, %179\l  %187 = getelementptr inbounds %struct.COMPLEX, ptr %.0285286, \
i64 %24, i32 1\l  store double %186, ptr %187, align 8\l  %188 = fadd double %92, %164\l  %189 = getelementptr inbounds %struct.COMPLEX, \
ptr %.0285286, i64 %19\l  store double %188, ptr %189, align 8\l  %190 = fsub double %93, %163\l  %191 = getelementptr inbounds %\
struct.COMPLEX, ptr %.0285286, i64 %19, i32 1\l  store double %190, ptr %191, align 8\l  %192 = fsub double %92, %164\l  %193 = \
getelementptr inbounds %struct.COMPLEX, ptr %.0285286, i64 %21\l  store double %192, ptr %193, align 8\l  %194 = fadd double %93, %\
163\l  %195 = getelementptr inbounds %struct.COMPLEX, ptr %.0285286, i64 %21, i32 1\l  store double %194, ptr %195, align 8\l  %\
196 = fsub double %168, %167\l  %197 = fmul double %196, 0x3FE6A09E667F4BB8\l  %198 = fadd double %167, %168\l  %199 = fmul double %\
198, 0x3FE6A09E667F4BB8\l  %200 = fadd double %96, %197\l  %201 = getelementptr inbounds %struct.COMPLEX, ptr %.0285286, i64 %26\l  \
store double %200, ptr %201, align 8\l  %202 = fsub double %97, %199\l  %203 = getelementptr inbounds %struct.COMPLEX, ptr %.0285286, \
i64 %26, i32 1\l  store double %202, ptr %203, align 8\l  %204 = fsub double %96, %197\l  %205 = getelementptr inbounds %struct.COMPLEX, \
ptr %.0285286, i64 %28\l  store double %204, ptr %205, align 8\l  %206 = fadd double %97, %199\l  %207 = getelementptr inbounds %\
struct.COMPLEX, ptr %.0285286, i64 %28, i32 1\l  store double %206, ptr %207, align 8\l  %indvars.iv.next290 = add nsw i64 %indvars.iv289, \
1\l  %indvars.iv.next = add i64 %indvars.iv, %30\l  %208 = getelementptr inbounds %struct.COMPLEX, ptr %.0285286, i64 1\l  %exitcond.not = \
icmp eq i64 %indvars.iv.next290, %wide.trip.count\l  br i1 %exitcond.not, label %.loopexit, label %31, !llvm.loop !4\l|{<s0>T|<s1>\
F}}" filled record #3d50c3ff #be242e70
edge Node0x2972e970 Node0x295bf500 4 13.431 57.828 13.431 57.719 13.431 57.59 13.431 57.457 solid black
edge Node0x295bf500 Node0x295c7500 4 10.944 55.886 9.9624 55.886 8.9318 55.439 8.2 55.034 solid black
edge Node0x295bf500 Node0x295c7550 4 14.667 55.726 14.642 55.608 14.622 55.483 14.607 55.36 solid black
edge Node0x295c7500 Node0x295c8dd0 4 5.9028 53.782 5.9028 53.581 5.8874 53.375 5.8612 53.169 solid black
edge Node0x295c7500 Node0x295e3530 7 9.7917 53.949 10.491 53.949 9.9779 4.1615 9.5417 3.6152 9.2131 3.2037 7.7956 2.9816 6.8684 2.878 solid black
edge Node0x295c7550 Node0x295bf500 4 14.741 55.223 14.73 55.342 14.715 55.464 14.694 55.584 solid black
edge Node0x295c8dd0 Node0x295c7ee0 4 5.1131 48.423 5.1103 48.303 5.1074 48.18 5.1044 48.053 solid black
edge Node0x295c7ee0 Node0x295e3530 4 2.2917 3.6152 2.2917 3.0223 4.1048 2.8611 5.2096 2.8179 solid black
edge Node0x295c7ee0 Node0x295c7ee0 7 6.9208 3.6194 8.5037 -1.9597 9.4167 -1.8018 9.4167 14.775 9.4167 17.517 9.3301 19.811 9.1784 21.703 solid black
stop
