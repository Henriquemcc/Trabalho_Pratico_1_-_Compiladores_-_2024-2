graph 1 10.806 11.944
node Node0x2e282710 7.5972 11.354 6.4167 1.1806 "{3:\l|  %4 = icmp sgt i32 %0, 0\l  br i1 %4, label %.lr.ph.preheader, label %._crit_edge\l|{<s0>T|<s1>F}}" filled record #3d50c3ff #d24b4070
node Node0x2e0c52f0 5.0139 9.8333 5.0417 0.86111 "{.lr.ph.preheader:\l|  %wide.trip.count = zext nneg i32 %0 to i64\l  br label %.lr.ph\l}" filled record #3d50c3ff #d6524470
node Node0x2e283020 5.9722 1.1667 7.2222 1.6944 "{._crit_edge:\l|  %.0.lcssa = phi double [ 0.000000e+00, %3 ], [ %.1, %.lr.ph ]\l  %22 = tail call i32 (ptr, ...) @printf(ptr noundef \
nonnull\l... dereferenceable(1) @.str.3, double noundef %.0.lcssa)\l  %23 = fcmp ogt double %.0.lcssa, 1.000000e-03\l  %. = select \
i1 %23, i32 -1, i32 1\l  ret i32 %.\l}" filled record #3d50c3ff #d24b4070
node Node0x2e282fd0 4.5278 5.7083 9.0556 6.3889 "{.lr.ph:\l|  %indvars.iv = phi i64 [ 0, %.lr.ph.preheader ], [ %indvars.iv.next,\l... %.lr.ph ]\l  %.042 = phi double [ 0.000000e+\
00, %.lr.ph.preheader ], [ %.1, %.lr.ph ]\l  %5 = getelementptr inbounds %struct.COMPLEX, ptr %1, i64 %indvars.iv\l  %6 = load double, \
ptr %5, align 8\l  %7 = getelementptr inbounds %struct.COMPLEX, ptr %2, i64 %indvars.iv\l  %8 = load double, ptr %7, align 8\l  %\
9 = fsub double %6, %8\l  %10 = getelementptr inbounds %struct.COMPLEX, ptr %1, i64 %indvars.iv, i32 1\l  %11 = load double, ptr %\
10, align 8\l  %12 = getelementptr inbounds %struct.COMPLEX, ptr %2, i64 %indvars.iv, i32 1\l  %13 = load double, ptr %12, align \
8\l  %14 = fsub double %11, %13\l  %15 = fmul double %14, %14\l  %16 = tail call double @llvm.fmuladd.f64(double %9, double %9, \
double %15)\l  %sqrt40 = tail call double @llvm.sqrt.f64(double %16)\l  %17 = fmul double %13, %13\l  %18 = tail call double @llvm.fmuladd.f64(\
double %8, double %8, double %17)\l  %sqrt = tail call double @llvm.sqrt.f64(double %18)\l  %19 = fcmp ogt double %sqrt, 1.000000e-10\l  %\
20 = select i1 %19, double %sqrt, double 1.000000e+00\l  %.038 = fdiv double %sqrt40, %20\l  %21 = fcmp ogt double %.038, %.042\l  %\
.1 = select i1 %21, double %.038, double %.042\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %exitcond.not = icmp eq i64 %\
indvars.iv.next, %wide.trip.count\l  br i1 %exitcond.not, label %._crit_edge, label %.lr.ph, !llvm.loop !4\l|{<s0>T|<s1>F}}" filled record #b70d28ff #b70d2870
edge Node0x2e282710 Node0x2e0c52f0 4 4.375 10.924 4.0898 10.924 4.2649 10.641 4.5033 10.365 solid black
edge Node0x2e282710 Node0x2e283020 10 9.2083 10.764 9.2083 9.9309 9.3811 9.7343 9.4306 8.9028 9.5992 6.0683 11.037 4.8552 9.4306 2.5139 9.3232 2.3575 9.1947 2.2194 9.0514 2.0975 solid black
edge Node0x2e0c52f0 Node0x2e282fd0 4 4.9651 9.4078 4.9523 9.3005 4.9376 9.1761 4.9213 9.0392 solid black
edge Node0x2e282fd0 Node0x2e283020 4 2.2639 2.5139 2.2639 2.3566 2.3835 2.2128 2.5798 2.0827 solid black
edge Node0x2e282fd0 Node0x2e282fd0 7 7.0513 2.5187 8.484 1.6607 9.3056 1.7943 9.3056 4.1944 9.3056 4.5635 9.2384 4.8789 9.1188 5.1454 solid black
stop
