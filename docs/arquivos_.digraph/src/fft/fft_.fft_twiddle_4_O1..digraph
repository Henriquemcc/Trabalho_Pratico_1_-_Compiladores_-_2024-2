graph 1 19 29.493
node Node0x29582890 13.292 29.166 2.6389 0.65278 "{8:\l|  br label %tailrecurse\l}" filled record #3d50c3ff #d6524470
node Node0x295a3e00 13.292 27.541 4.6944 1.5972 "{tailrecurse:\l|  %.tr = phi i32 [ %0, %8 ], [ %97, %95 ]\l  %9 = sub nsw i32 %1, %.tr\l  %10 = icmp slt i32 %9, 128\l  br i1 %10, \
label %11, label %95\l|{<s0>T|<s1>F}}" filled record #b70d28ff #b70d2870
node Node0x295a4db0 7.1111 25.395 5.1528 1.1806 "{11:\l|  %12 = icmp slt i32 %.tr, %1\l  br i1 %12, label %.lr.ph, label %.loopexit\l|{<s0>T|<s1>F}}" filled record #3d50c3ff #d6524470
node Node0x295a64e0 14.472 25.395 9.0556 1.6944 "{95:\l|  %96 = add nsw i32 %1, %.tr\l  %97 = sdiv i32 %96, 2\l  tail call void @fft_twiddle_4(i32 noundef %.tr, i32 noundef %97, \
ptr noundef\l... %2, ptr noundef %3, ptr noundef %4, i32 noundef %5, i32 noundef %6, i32\l... noundef %7)\l  br label %tailrecurse\l}" filled record #b70d28ff #b70d2870
node Node0x296d4cc0 5.0833 22.576 7.3333 2.9444 "{.lr.ph:\l|  %13 = sext i32 %.tr to i64\l  %14 = getelementptr inbounds %struct.COMPLEX, ptr %3, i64 %13\l  %15 = mul i32 %6, %.tr\l  %\
16 = shl nsw i32 %7, 1\l  %17 = sext i32 %16 to i64\l  %18 = sext i32 %7 to i64\l  %19 = mul nsw i32 %7, 3\l  %20 = sext i32 %19 \
to i64\l  %21 = sext i32 %15 to i64\l  %22 = sext i32 %6 to i64\l  %wide.trip.count = sext i32 %1 to i64\l  br label %23\l}" filled record #3d50c3ff #dc5d4a70
node Node0x295b3350 5.9722 0.88854 1.375 0.65278 "{.loopexit:\l|  ret void\l}" filled record #3d50c3ff #d6524470
node Node0x295a7640 4.5278 11.159 9.0556 18.889 "{23:\l|  %indvars.iv137 = phi i64 [ %13, %.lr.ph ], [ %indvars.iv.next138, %23 ]\l  %indvars.iv = phi i64 [ %21, %.lr.ph ], [ %indvars.iv.next, %\
23 ]\l  %.0133134 = phi ptr [ %14, %.lr.ph ], [ %94, %23 ]\l  %24 = getelementptr inbounds %struct.COMPLEX, ptr %2, i64 %indvars.iv137\l  %\
25 = load double, ptr %24, align 8\l  %26 = getelementptr inbounds %struct.COMPLEX, ptr %2, i64 %indvars.iv137,\l... i32 1\l  %27 = \
load double, ptr %26, align 8\l  %28 = trunc i64 %indvars.iv to i32\l  %29 = shl nsw i32 %28, 1\l  %30 = sext i32 %29 to i64\l  %\
31 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %30\l  %32 = load double, ptr %31, align 8\l  %33 = getelementptr inbounds %\
struct.COMPLEX, ptr %4, i64 %30, i32 1\l  %34 = load double, ptr %33, align 8\l  %35 = getelementptr inbounds %struct.COMPLEX, ptr %\
24, i64 %17\l  %36 = load double, ptr %35, align 8\l  %37 = getelementptr inbounds %struct.COMPLEX, ptr %24, i64 %17, i32 1\l  %\
38 = load double, ptr %37, align 8\l  %39 = fneg double %34\l  %40 = fmul double %38, %39\l  %41 = tail call double @llvm.fmuladd.f64(\
double %32, double %36, double %40)\l  %42 = fmul double %32, %38\l  %43 = tail call double @llvm.fmuladd.f64(double %34, double %\
36, double %42)\l  %44 = fadd double %25, %41\l  %45 = fadd double %27, %43\l  %46 = fsub double %25, %41\l  %47 = fsub double %\
27, %43\l  %48 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %indvars.iv\l  %49 = load double, ptr %48, align 8\l  %50 = \
getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %indvars.iv, i32 1\l  %51 = load double, ptr %50, align 8\l  %52 = getelementptr \
inbounds %struct.COMPLEX, ptr %24, i64 %18\l  %53 = load double, ptr %52, align 8\l  %54 = getelementptr inbounds %struct.COMPLEX, \
ptr %24, i64 %18, i32 1\l  %55 = load double, ptr %54, align 8\l  %56 = fneg double %51\l  %57 = fmul double %55, %56\l  %58 = tail \
call double @llvm.fmuladd.f64(double %49, double %53, double %57)\l  %59 = fmul double %49, %55\l  %60 = tail call double @llvm.fmuladd.f64(\
double %51, double %53, double %59)\l  %61 = mul nsw i64 %indvars.iv, 3\l  %62 = getelementptr inbounds %struct.COMPLEX, ptr %4, \
i64 %61\l  %63 = load double, ptr %62, align 8\l  %64 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %61, i32 1\l  %65 = \
load double, ptr %64, align 8\l  %66 = getelementptr inbounds %struct.COMPLEX, ptr %24, i64 %20\l  %67 = load double, ptr %66, align \
8\l  %68 = getelementptr inbounds %struct.COMPLEX, ptr %24, i64 %20, i32 1\l  %69 = load double, ptr %68, align 8\l  %70 = fneg \
double %65\l  %71 = fmul double %69, %70\l  %72 = tail call double @llvm.fmuladd.f64(double %63, double %67, double %71)\l  %73 = \
fmul double %63, %69\l  %74 = tail call double @llvm.fmuladd.f64(double %65, double %67, double %73)\l  %75 = fadd double %58, %\
72\l  %76 = fadd double %60, %74\l  %77 = fsub double %58, %72\l  %78 = fsub double %60, %74\l  %79 = fadd double %44, %75\l  store \
double %79, ptr %.0133134, align 8\l  %80 = fadd double %45, %76\l  %81 = getelementptr inbounds %struct.COMPLEX, ptr %.0133134, \
i64 0, i32 1\l  store double %80, ptr %81, align 8\l  %82 = fsub double %44, %75\l  %83 = getelementptr inbounds %struct.COMPLEX, \
ptr %.0133134, i64 %17\l  store double %82, ptr %83, align 8\l  %84 = fsub double %45, %76\l  %85 = getelementptr inbounds %struct.COMPLEX, \
ptr %.0133134, i64 %17, i32 1\l  store double %84, ptr %85, align 8\l  %86 = fadd double %46, %78\l  %87 = getelementptr inbounds %\
struct.COMPLEX, ptr %.0133134, i64 %18\l  store double %86, ptr %87, align 8\l  %88 = fsub double %47, %77\l  %89 = getelementptr \
inbounds %struct.COMPLEX, ptr %.0133134, i64 %18, i32 1\l  store double %88, ptr %89, align 8\l  %90 = fsub double %46, %78\l  %\
91 = getelementptr inbounds %struct.COMPLEX, ptr %.0133134, i64 %20\l  store double %90, ptr %91, align 8\l  %92 = fadd double %\
47, %77\l  %93 = getelementptr inbounds %struct.COMPLEX, ptr %.0133134, i64 %20, i32 1\l  store double %92, ptr %93, align 8\l  %\
indvars.iv.next138 = add nsw i64 %indvars.iv137, 1\l  %indvars.iv.next = add i64 %indvars.iv, %22\l  %94 = getelementptr inbounds %\
struct.COMPLEX, ptr %.0133134, i64 1\l  %exitcond.not = icmp eq i64 %indvars.iv.next138, %wide.trip.count\l  br i1 %exitcond.not, \
label %.loopexit, label %23, !llvm.loop !4\l|{<s0>T|<s1>F}}" filled record #3d50c3ff #be242e70
edge Node0x29582890 Node0x295a3e00 4 13.292 28.844 13.292 28.735 13.292 28.607 13.292 28.473 solid black
edge Node0x295a3e00 Node0x295a4db0 4 10.931 26.902 9.9307 26.902 8.8785 26.453 8.1322 26.047 solid black
edge Node0x295a3e00 Node0x295a64e0 4 14.472 26.743 14.447 26.624 14.427 26.5 14.412 26.376 solid black
edge Node0x295a4db0 Node0x296d4cc0 4 5.8194 24.798 5.8194 24.596 5.7914 24.389 5.7463 24.186 solid black
edge Node0x295a4db0 Node0x295b3350 7 9.7083 24.965 10.031 24.965 9.6326 1.9669 9.4306 1.7149 9.1068 1.3113 7.7221 1.0878 6.806 0.98161 solid black
edge Node0x295a64e0 Node0x295a3e00 4 14.547 26.239 14.536 26.358 14.52 26.481 14.499 26.6 solid black
edge Node0x296d4cc0 Node0x295a7640 4 5.0124 21.108 5.0067 20.99 5.0006 20.867 4.9944 20.739 solid black
edge Node0x295a7640 Node0x295b3350 4 2.2639 1.7149 2.2639 1.1299 4.0472 0.96554 5.1405 0.91975 solid black
edge Node0x295a7640 Node0x295a7640 7 6.8934 1.72 8.4234 -0.67758 9.3056 -0.52619 9.3056 6.5205 9.3056 7.6706 9.2243 8.637 9.0813 9.4387 solid black
stop
