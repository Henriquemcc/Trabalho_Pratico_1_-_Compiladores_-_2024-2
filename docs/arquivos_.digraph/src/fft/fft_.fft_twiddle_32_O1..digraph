graph 1 19.306 283.21
node Node0x2959a410 13.375 282.88 2.6389 0.65278 "{8:\l|  br label %tailrecurse\l}" filled record #3d50c3ff #d6524470
node Node0x2969a980 13.375 281.26 5.1528 1.5972 "{tailrecurse:\l|  %.tr = phi i32 [ %0, %8 ], [ %1047, %1045 ]\l  %9 = sub nsw i32 %1, %.tr\l  %10 = icmp slt i32 %9, 128\l  br i1 %\
10, label %11, label %1045\l|{<s0>T|<s1>F}}" filled record #b70d28ff #b70d2870
node Node0x296a7c10 7.1944 279.11 5.1528 1.1806 "{11:\l|  %12 = icmp slt i32 %.tr, %1\l  br i1 %12, label %.lr.ph, label %.loopexit\l|{<s0>T|<s1>F}}" filled record #3d50c3ff #d6524470
node Node0x296a7c60 14.667 279.11 9.2778 1.6944 "{1045:\l|  %1046 = add nsw i32 %1, %.tr\l  %1047 = sdiv i32 %1046, 2\l  tail call void @fft_twiddle_32(i32 noundef %.tr, i32 noundef %\
1047, ptr\l... noundef %2, ptr noundef %3, ptr noundef %4, i32 noundef %5, i32 noundef %6,\l... i32 noundef %7)\l  br label %tailrecurse\l}" filled record #b70d28ff #b70d2870
node Node0x2960aaa0 5.1667 270.46 7.3333 14.611 "{.lr.ph:\l|  %13 = sext i32 %.tr to i64\l  %14 = getelementptr inbounds %struct.COMPLEX, ptr %3, i64 %13\l  %15 = mul i32 %6, %.tr\l  %\
16 = shl nsw i32 %7, 4\l  %17 = sext i32 %16 to i64\l  %18 = shl nsw i32 %7, 3\l  %19 = sext i32 %18 to i64\l  %20 = mul nsw i32 %\
7, 24\l  %21 = sext i32 %20 to i64\l  %22 = shl nsw i32 %7, 2\l  %23 = sext i32 %22 to i64\l  %24 = mul nsw i32 %7, 20\l  %25 = \
sext i32 %24 to i64\l  %26 = mul nsw i32 %7, 12\l  %27 = sext i32 %26 to i64\l  %28 = mul nsw i32 %7, 28\l  %29 = sext i32 %28 to \
i64\l  %30 = shl nsw i32 %7, 1\l  %31 = sext i32 %30 to i64\l  %32 = mul nsw i32 %7, 18\l  %33 = sext i32 %32 to i64\l  %34 = mul \
nsw i32 %7, 10\l  %35 = sext i32 %34 to i64\l  %36 = mul nsw i32 %7, 26\l  %37 = sext i32 %36 to i64\l  %38 = mul nsw i32 %7, 6\l  %\
39 = sext i32 %38 to i64\l  %40 = mul nsw i32 %7, 22\l  %41 = sext i32 %40 to i64\l  %42 = mul nsw i32 %7, 14\l  %43 = sext i32 %\
42 to i64\l  %44 = mul nsw i32 %7, 30\l  %45 = sext i32 %44 to i64\l  %46 = sext i32 %7 to i64\l  %47 = mul nsw i32 %7, 17\l  %48 = \
sext i32 %47 to i64\l  %49 = mul nsw i32 %7, 9\l  %50 = sext i32 %49 to i64\l  %51 = mul nsw i32 %7, 25\l  %52 = sext i32 %51 to \
i64\l  %53 = mul nsw i32 %7, 5\l  %54 = sext i32 %53 to i64\l  %55 = mul nsw i32 %7, 21\l  %56 = sext i32 %55 to i64\l  %57 = mul \
nsw i32 %7, 13\l  %58 = sext i32 %57 to i64\l  %59 = mul nsw i32 %7, 29\l  %60 = sext i32 %59 to i64\l  %61 = mul nsw i32 %7, 3\l  %\
62 = sext i32 %61 to i64\l  %63 = mul nsw i32 %7, 19\l  %64 = sext i32 %63 to i64\l  %65 = mul nsw i32 %7, 11\l  %66 = sext i32 %\
65 to i64\l  %67 = mul nsw i32 %7, 27\l  %68 = sext i32 %67 to i64\l  %69 = mul nsw i32 %7, 7\l  %70 = sext i32 %69 to i64\l  %71 = \
mul nsw i32 %7, 23\l  %72 = sext i32 %71 to i64\l  %73 = mul nsw i32 %7, 15\l  %74 = sext i32 %73 to i64\l  %75 = mul nsw i32 %7, \
31\l  %76 = sext i32 %75 to i64\l  %77 = sext i32 %15 to i64\l  %78 = sext i32 %6 to i64\l  %wide.trip.count = sext i32 %1 to i64\l  \
br label %79\l}" filled record #3d50c3ff #dc5d4a70
node Node0x296f8080 6.0417 17.731 1.375 0.65278 "{.loopexit:\l|  ret void\l}" filled record #3d50c3ff #d6524470
node Node0x296a85f0 4.5833 140.61 9.1667 244.1 "{79:\l|  %indvars.iv1441 = phi i64 [ %13, %.lr.ph ], [ %indvars.iv.next1442, %79 ]\l  %indvars.iv = phi i64 [ %77, %.lr.ph ], [ %\
indvars.iv.next, %79 ]\l  %.014371438 = phi ptr [ %14, %.lr.ph ], [ %1044, %79 ]\l  %80 = getelementptr inbounds %struct.COMPLEX, \
ptr %2, i64 %indvars.iv1441\l  %81 = load double, ptr %80, align 8\l  %82 = getelementptr inbounds %struct.COMPLEX, ptr %2, i64 %\
indvars.iv1441,\l... i32 1\l  %83 = load double, ptr %82, align 8\l  %84 = trunc i64 %indvars.iv to i32\l  %85 = shl nsw i32 %84, \
4\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %86\l  %88 = load double, ptr %87, align \
8\l  %89 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %86, i32 1\l  %90 = load double, ptr %89, align 8\l  %91 = getelementptr \
inbounds %struct.COMPLEX, ptr %80, i64 %17\l  %92 = load double, ptr %91, align 8\l  %93 = getelementptr inbounds %struct.COMPLEX, \
ptr %80, i64 %17, i32 1\l  %94 = load double, ptr %93, align 8\l  %95 = fneg double %90\l  %96 = fmul double %94, %95\l  %97 = tail \
call double @llvm.fmuladd.f64(double %88, double %92, double %96)\l  %98 = fmul double %88, %94\l  %99 = tail call double @llvm.fmuladd.f64(\
double %90, double %92, double %98)\l  %100 = fadd double %81, %97\l  %101 = fadd double %83, %99\l  %102 = fsub double %81, %97\l  %\
103 = fsub double %83, %99\l  %104 = trunc i64 %indvars.iv to i32\l  %105 = shl nsw i32 %104, 3\l  %106 = sext i32 %105 to i64\l  %\
107 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %106\l  %108 = load double, ptr %107, align 8\l  %109 = getelementptr \
inbounds %struct.COMPLEX, ptr %4, i64 %106, i32 1\l  %110 = load double, ptr %109, align 8\l  %111 = getelementptr inbounds %struct.COMPLEX, \
ptr %80, i64 %19\l  %112 = load double, ptr %111, align 8\l  %113 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %19, i32 \
1\l  %114 = load double, ptr %113, align 8\l  %115 = fneg double %110\l  %116 = fmul double %114, %115\l  %117 = tail call double @\
llvm.fmuladd.f64(double %108, double %112, double\l... %116)\l  %118 = fmul double %108, %114\l  %119 = tail call double @llvm.fmuladd.f64(\
double %110, double %112, double\l... %118)\l  %120 = mul nsw i64 %indvars.iv, 24\l  %121 = getelementptr inbounds %struct.COMPLEX, \
ptr %4, i64 %120\l  %122 = load double, ptr %121, align 8\l  %123 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %120, i32 \
1\l  %124 = load double, ptr %123, align 8\l  %125 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %21\l  %126 = load double, \
ptr %125, align 8\l  %127 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %21, i32 1\l  %128 = load double, ptr %127, align \
8\l  %129 = fneg double %124\l  %130 = fmul double %128, %129\l  %131 = tail call double @llvm.fmuladd.f64(double %122, double %\
126, double\l... %130)\l  %132 = fmul double %122, %128\l  %133 = tail call double @llvm.fmuladd.f64(double %124, double %126, double\l... %\
132)\l  %134 = fadd double %117, %131\l  %135 = fadd double %119, %133\l  %136 = fsub double %117, %131\l  %137 = fsub double %119, %\
133\l  %138 = fadd double %100, %134\l  %139 = fadd double %101, %135\l  %140 = fsub double %100, %134\l  %141 = fsub double %101, %\
135\l  %142 = fadd double %102, %137\l  %143 = fsub double %103, %136\l  %144 = fsub double %102, %137\l  %145 = fadd double %103, %\
136\l  %146 = trunc i64 %indvars.iv to i32\l  %147 = shl nsw i32 %146, 2\l  %148 = sext i32 %147 to i64\l  %149 = getelementptr \
inbounds %struct.COMPLEX, ptr %4, i64 %148\l  %150 = load double, ptr %149, align 8\l  %151 = getelementptr inbounds %struct.COMPLEX, \
ptr %4, i64 %148, i32 1\l  %152 = load double, ptr %151, align 8\l  %153 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %\
23\l  %154 = load double, ptr %153, align 8\l  %155 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %23, i32 1\l  %156 = \
load double, ptr %155, align 8\l  %157 = fneg double %152\l  %158 = fmul double %156, %157\l  %159 = tail call double @llvm.fmuladd.f64(\
double %150, double %154, double\l... %158)\l  %160 = fmul double %150, %156\l  %161 = tail call double @llvm.fmuladd.f64(double %\
152, double %154, double\l... %160)\l  %162 = mul nsw i64 %indvars.iv, 20\l  %163 = getelementptr inbounds %struct.COMPLEX, ptr %\
4, i64 %162\l  %164 = load double, ptr %163, align 8\l  %165 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %162, i32 1\l  %\
166 = load double, ptr %165, align 8\l  %167 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %25\l  %168 = load double, ptr %\
167, align 8\l  %169 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %25, i32 1\l  %170 = load double, ptr %169, align 8\l  %\
171 = fneg double %166\l  %172 = fmul double %170, %171\l  %173 = tail call double @llvm.fmuladd.f64(double %164, double %168, double\l... %\
172)\l  %174 = fmul double %164, %170\l  %175 = tail call double @llvm.fmuladd.f64(double %166, double %168, double\l... %174)\l  %\
176 = fadd double %159, %173\l  %177 = fadd double %161, %175\l  %178 = fsub double %159, %173\l  %179 = fsub double %161, %175\l  %\
180 = mul nsw i64 %indvars.iv, 12\l  %181 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %180\l  %182 = load double, ptr %\
181, align 8\l  %183 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %180, i32 1\l  %184 = load double, ptr %183, align 8\l  %\
185 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %27\l  %186 = load double, ptr %185, align 8\l  %187 = getelementptr \
inbounds %struct.COMPLEX, ptr %80, i64 %27, i32 1\l  %188 = load double, ptr %187, align 8\l  %189 = fneg double %184\l  %190 = \
fmul double %188, %189\l  %191 = tail call double @llvm.fmuladd.f64(double %182, double %186, double\l... %190)\l  %192 = fmul double %\
182, %188\l  %193 = tail call double @llvm.fmuladd.f64(double %184, double %186, double\l... %192)\l  %194 = mul nsw i64 %indvars.iv, \
28\l  %195 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %194\l  %196 = load double, ptr %195, align 8\l  %197 = getelementptr \
inbounds %struct.COMPLEX, ptr %4, i64 %194, i32 1\l  %198 = load double, ptr %197, align 8\l  %199 = getelementptr inbounds %struct.COMPLEX, \
ptr %80, i64 %29\l  %200 = load double, ptr %199, align 8\l  %201 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %29, i32 \
1\l  %202 = load double, ptr %201, align 8\l  %203 = fneg double %198\l  %204 = fmul double %202, %203\l  %205 = tail call double @\
llvm.fmuladd.f64(double %196, double %200, double\l... %204)\l  %206 = fmul double %196, %202\l  %207 = tail call double @llvm.fmuladd.f64(\
double %198, double %200, double\l... %206)\l  %208 = fadd double %191, %205\l  %209 = fadd double %193, %207\l  %210 = fsub double %\
191, %205\l  %211 = fsub double %193, %207\l  %212 = fadd double %176, %208\l  %213 = fadd double %177, %209\l  %214 = fsub double %\
176, %208\l  %215 = fsub double %177, %209\l  %216 = fadd double %178, %211\l  %217 = fsub double %179, %210\l  %218 = fsub double %\
178, %211\l  %219 = fadd double %179, %210\l  %220 = fadd double %138, %212\l  %221 = fadd double %139, %213\l  %222 = fsub double %\
138, %212\l  %223 = fsub double %139, %213\l  %224 = fadd double %216, %217\l  %225 = fmul double %224, 0x3FE6A09E667F4BB8\l  %226 = \
fsub double %217, %216\l  %227 = fmul double %226, 0x3FE6A09E667F4BB8\l  %228 = fadd double %142, %225\l  %229 = fadd double %143, %\
227\l  %230 = fsub double %142, %225\l  %231 = fsub double %143, %227\l  %232 = fadd double %140, %215\l  %233 = fsub double %141, %\
214\l  %234 = fsub double %140, %215\l  %235 = fadd double %141, %214\l  %236 = fsub double %219, %218\l  %237 = fmul double %236, \
0x3FE6A09E667F4BB8\l  %238 = fadd double %218, %219\l  %239 = fmul double %238, 0x3FE6A09E667F4BB8\l  %240 = fadd double %144, %\
237\l  %241 = fsub double %145, %239\l  %242 = fsub double %144, %237\l  %243 = fadd double %145, %239\l  %244 = trunc i64 %indvars.iv \
to i32\l  %245 = shl nsw i32 %244, 1\l  %246 = sext i32 %245 to i64\l  %247 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %\
246\l  %248 = load double, ptr %247, align 8\l  %249 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %246, i32 1\l  %250 = \
load double, ptr %249, align 8\l  %251 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %31\l  %252 = load double, ptr %251, \
align 8\l  %253 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %31, i32 1\l  %254 = load double, ptr %253, align 8\l  %255 = \
fneg double %250\l  %256 = fmul double %254, %255\l  %257 = tail call double @llvm.fmuladd.f64(double %248, double %252, double\l... %\
256)\l  %258 = fmul double %248, %254\l  %259 = tail call double @llvm.fmuladd.f64(double %250, double %252, double\l... %258)\l  %\
260 = mul nsw i64 %indvars.iv, 18\l  %261 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %260\l  %262 = load double, ptr %\
261, align 8\l  %263 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %260, i32 1\l  %264 = load double, ptr %263, align 8\l  %\
265 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %33\l  %266 = load double, ptr %265, align 8\l  %267 = getelementptr \
inbounds %struct.COMPLEX, ptr %80, i64 %33, i32 1\l  %268 = load double, ptr %267, align 8\l  %269 = fneg double %264\l  %270 = \
fmul double %268, %269\l  %271 = tail call double @llvm.fmuladd.f64(double %262, double %266, double\l... %270)\l  %272 = fmul double %\
262, %268\l  %273 = tail call double @llvm.fmuladd.f64(double %264, double %266, double\l... %272)\l  %274 = fadd double %257, %\
271\l  %275 = fadd double %259, %273\l  %276 = fsub double %257, %271\l  %277 = fsub double %259, %273\l  %278 = mul nsw i64 %indvars.iv, \
10\l  %279 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %278\l  %280 = load double, ptr %279, align 8\l  %281 = getelementptr \
inbounds %struct.COMPLEX, ptr %4, i64 %278, i32 1\l  %282 = load double, ptr %281, align 8\l  %283 = getelementptr inbounds %struct.COMPLEX, \
ptr %80, i64 %35\l  %284 = load double, ptr %283, align 8\l  %285 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %35, i32 \
1\l  %286 = load double, ptr %285, align 8\l  %287 = fneg double %282\l  %288 = fmul double %286, %287\l  %289 = tail call double @\
llvm.fmuladd.f64(double %280, double %284, double\l... %288)\l  %290 = fmul double %280, %286\l  %291 = tail call double @llvm.fmuladd.f64(\
double %282, double %284, double\l... %290)\l  %292 = mul nsw i64 %indvars.iv, 26\l  %293 = getelementptr inbounds %struct.COMPLEX, \
ptr %4, i64 %292\l  %294 = load double, ptr %293, align 8\l  %295 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %292, i32 \
1\l  %296 = load double, ptr %295, align 8\l  %297 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %37\l  %298 = load double, \
ptr %297, align 8\l  %299 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %37, i32 1\l  %300 = load double, ptr %299, align \
8\l  %301 = fneg double %296\l  %302 = fmul double %300, %301\l  %303 = tail call double @llvm.fmuladd.f64(double %294, double %\
298, double\l... %302)\l  %304 = fmul double %294, %300\l  %305 = tail call double @llvm.fmuladd.f64(double %296, double %298, double\l... %\
304)\l  %306 = fadd double %289, %303\l  %307 = fadd double %291, %305\l  %308 = fsub double %289, %303\l  %309 = fsub double %291, %\
305\l  %310 = fadd double %274, %306\l  %311 = fadd double %275, %307\l  %312 = fsub double %274, %306\l  %313 = fsub double %275, %\
307\l  %314 = fadd double %276, %309\l  %315 = fsub double %277, %308\l  %316 = fsub double %276, %309\l  %317 = fadd double %277, %\
308\l  %318 = mul nsw i64 %indvars.iv, 6\l  %319 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %318\l  %320 = load double, \
ptr %319, align 8\l  %321 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %318, i32 1\l  %322 = load double, ptr %321, align \
8\l  %323 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %39\l  %324 = load double, ptr %323, align 8\l  %325 = getelementptr \
inbounds %struct.COMPLEX, ptr %80, i64 %39, i32 1\l  %326 = load double, ptr %325, align 8\l  %327 = fneg double %322\l  %328 = \
fmul double %326, %327\l  %329 = tail call double @llvm.fmuladd.f64(double %320, double %324, double\l... %328)\l  %330 = fmul double %\
320, %326\l  %331 = tail call double @llvm.fmuladd.f64(double %322, double %324, double\l... %330)\l  %332 = mul nsw i64 %indvars.iv, \
22\l  %333 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %332\l  %334 = load double, ptr %333, align 8\l  %335 = getelementptr \
inbounds %struct.COMPLEX, ptr %4, i64 %332, i32 1\l  %336 = load double, ptr %335, align 8\l  %337 = getelementptr inbounds %struct.COMPLEX, \
ptr %80, i64 %41\l  %338 = load double, ptr %337, align 8\l  %339 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %41, i32 \
1\l  %340 = load double, ptr %339, align 8\l  %341 = fneg double %336\l  %342 = fmul double %340, %341\l  %343 = tail call double @\
llvm.fmuladd.f64(double %334, double %338, double\l... %342)\l  %344 = fmul double %334, %340\l  %345 = tail call double @llvm.fmuladd.f64(\
double %336, double %338, double\l... %344)\l  %346 = fadd double %329, %343\l  %347 = fadd double %331, %345\l  %348 = fsub double %\
329, %343\l  %349 = fsub double %331, %345\l  %350 = mul nsw i64 %indvars.iv, 14\l  %351 = getelementptr inbounds %struct.COMPLEX, \
ptr %4, i64 %350\l  %352 = load double, ptr %351, align 8\l  %353 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %350, i32 \
1\l  %354 = load double, ptr %353, align 8\l  %355 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %43\l  %356 = load double, \
ptr %355, align 8\l  %357 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %43, i32 1\l  %358 = load double, ptr %357, align \
8\l  %359 = fneg double %354\l  %360 = fmul double %358, %359\l  %361 = tail call double @llvm.fmuladd.f64(double %352, double %\
356, double\l... %360)\l  %362 = fmul double %352, %358\l  %363 = tail call double @llvm.fmuladd.f64(double %354, double %356, double\l... %\
362)\l  %364 = mul nsw i64 %indvars.iv, 30\l  %365 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %364\l  %366 = load double, \
ptr %365, align 8\l  %367 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %364, i32 1\l  %368 = load double, ptr %367, align \
8\l  %369 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %45\l  %370 = load double, ptr %369, align 8\l  %371 = getelementptr \
inbounds %struct.COMPLEX, ptr %80, i64 %45, i32 1\l  %372 = load double, ptr %371, align 8\l  %373 = fneg double %368\l  %374 = \
fmul double %372, %373\l  %375 = tail call double @llvm.fmuladd.f64(double %366, double %370, double\l... %374)\l  %376 = fmul double %\
366, %372\l  %377 = tail call double @llvm.fmuladd.f64(double %368, double %370, double\l... %376)\l  %378 = fadd double %361, %\
375\l  %379 = fadd double %363, %377\l  %380 = fsub double %361, %375\l  %381 = fsub double %363, %377\l  %382 = fadd double %346, %\
378\l  %383 = fadd double %347, %379\l  %384 = fsub double %346, %378\l  %385 = fsub double %347, %379\l  %386 = fadd double %348, %\
381\l  %387 = fsub double %349, %380\l  %388 = fsub double %348, %381\l  %389 = fadd double %349, %380\l  %390 = fadd double %310, %\
382\l  %391 = fadd double %311, %383\l  %392 = fsub double %310, %382\l  %393 = fsub double %311, %383\l  %394 = fadd double %386, %\
387\l  %395 = fmul double %394, 0x3FE6A09E667F4BB8\l  %396 = fsub double %387, %386\l  %397 = fmul double %396, 0x3FE6A09E667F4BB8\l  %\
398 = fadd double %314, %395\l  %399 = fadd double %315, %397\l  %400 = fsub double %314, %395\l  %401 = fsub double %315, %397\l  %\
402 = fadd double %312, %385\l  %403 = fsub double %313, %384\l  %404 = fsub double %312, %385\l  %405 = fadd double %313, %384\l  %\
406 = fsub double %389, %388\l  %407 = fmul double %406, 0x3FE6A09E667F4BB8\l  %408 = fadd double %388, %389\l  %409 = fmul double %\
408, 0x3FE6A09E667F4BB8\l  %410 = fadd double %316, %407\l  %411 = fsub double %317, %409\l  %412 = fsub double %316, %407\l  %413 = \
fadd double %317, %409\l  %414 = fadd double %220, %390\l  %415 = fadd double %221, %391\l  %416 = fsub double %220, %390\l  %417 = \
fsub double %221, %391\l  %418 = fmul double %399, 0x3FD87DE2A6AEA312\l  %419 = tail call double @llvm.fmuladd.f64(double %398, \
double\l... 0x3FED906BCF32832F, double %418)\l  %420 = fmul double %398, 0xBFD87DE2A6AEA312\l  %421 = tail call double @llvm.fmuladd.f64(\
double %399, double\l... 0x3FED906BCF32832F, double %420)\l  %422 = fadd double %228, %419\l  %423 = fadd double %229, %421\l  %\
424 = fsub double %228, %419\l  %425 = fsub double %229, %421\l  %426 = fadd double %402, %403\l  %427 = fmul double %426, 0x3FE6A09E667F4BB8\l  %\
428 = fsub double %403, %402\l  %429 = fmul double %428, 0x3FE6A09E667F4BB8\l  %430 = fadd double %232, %427\l  %431 = fadd double %\
233, %429\l  %432 = fsub double %232, %427\l  %433 = fsub double %233, %429\l  %434 = fmul double %411, 0x3FED906BCF32832F\l  %435 = \
tail call double @llvm.fmuladd.f64(double %410, double\l... 0x3FD87DE2A6AEA312, double %434)\l  %436 = fmul double %410, 0xBFED906BCF32832F\l  %\
437 = tail call double @llvm.fmuladd.f64(double %411, double\l... 0x3FD87DE2A6AEA312, double %436)\l  %438 = fadd double %240, %\
435\l  %439 = fadd double %241, %437\l  %440 = fsub double %240, %435\l  %441 = fsub double %241, %437\l  %442 = fadd double %222, %\
393\l  %443 = fsub double %223, %392\l  %444 = fsub double %222, %393\l  %445 = fadd double %223, %392\l  %446 = fmul double %400, \
0xBFD87DE2A6AEA312\l  %447 = tail call double @llvm.fmuladd.f64(double %401, double\l... 0x3FED906BCF32832F, double %446)\l  %448 = \
fmul double %401, 0x3FD87DE2A6AEA312\l  %449 = tail call double @llvm.fmuladd.f64(double %400, double\l... 0x3FED906BCF32832F, double %\
448)\l  %450 = fadd double %230, %447\l  %451 = fsub double %231, %449\l  %452 = fsub double %230, %447\l  %453 = fadd double %231, %\
449\l  %454 = fsub double %405, %404\l  %455 = fmul double %454, 0x3FE6A09E667F4BB8\l  %456 = fadd double %404, %405\l  %457 = fmul \
double %456, 0x3FE6A09E667F4BB8\l  %458 = fadd double %234, %455\l  %459 = fsub double %235, %457\l  %460 = fsub double %234, %455\l  %\
461 = fadd double %235, %457\l  %462 = fmul double %412, 0xBFED906BCF32832F\l  %463 = tail call double @llvm.fmuladd.f64(double %\
413, double\l... 0x3FD87DE2A6AEA312, double %462)\l  %464 = fmul double %413, 0x3FED906BCF32832F\l  %465 = tail call double @llvm.fmuladd.f64(\
double %412, double\l... 0x3FD87DE2A6AEA312, double %464)\l  %466 = fadd double %242, %463\l  %467 = fsub double %243, %465\l  %\
468 = fsub double %242, %463\l  %469 = fadd double %243, %465\l  %470 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %indvars.iv\l  %\
471 = load double, ptr %470, align 8\l  %472 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %indvars.iv, i32 1\l  %473 = \
load double, ptr %472, align 8\l  %474 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %46\l  %475 = load double, ptr %474, \
align 8\l  %476 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %46, i32 1\l  %477 = load double, ptr %476, align 8\l  %478 = \
fneg double %473\l  %479 = fmul double %477, %478\l  %480 = tail call double @llvm.fmuladd.f64(double %471, double %475, double\l... %\
479)\l  %481 = fmul double %471, %477\l  %482 = tail call double @llvm.fmuladd.f64(double %473, double %475, double\l... %481)\l  %\
483 = mul nsw i64 %indvars.iv, 17\l  %484 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %483\l  %485 = load double, ptr %\
484, align 8\l  %486 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %483, i32 1\l  %487 = load double, ptr %486, align 8\l  %\
488 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %48\l  %489 = load double, ptr %488, align 8\l  %490 = getelementptr \
inbounds %struct.COMPLEX, ptr %80, i64 %48, i32 1\l  %491 = load double, ptr %490, align 8\l  %492 = fneg double %487\l  %493 = \
fmul double %491, %492\l  %494 = tail call double @llvm.fmuladd.f64(double %485, double %489, double\l... %493)\l  %495 = fmul double %\
485, %491\l  %496 = tail call double @llvm.fmuladd.f64(double %487, double %489, double\l... %495)\l  %497 = fadd double %480, %\
494\l  %498 = fadd double %482, %496\l  %499 = fsub double %480, %494\l  %500 = fsub double %482, %496\l  %501 = mul nsw i64 %indvars.iv, \
9\l  %502 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %501\l  %503 = load double, ptr %502, align 8\l  %504 = getelementptr \
inbounds %struct.COMPLEX, ptr %4, i64 %501, i32 1\l  %505 = load double, ptr %504, align 8\l  %506 = getelementptr inbounds %struct.COMPLEX, \
ptr %80, i64 %50\l  %507 = load double, ptr %506, align 8\l  %508 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %50, i32 \
1\l  %509 = load double, ptr %508, align 8\l  %510 = fneg double %505\l  %511 = fmul double %509, %510\l  %512 = tail call double @\
llvm.fmuladd.f64(double %503, double %507, double\l... %511)\l  %513 = fmul double %503, %509\l  %514 = tail call double @llvm.fmuladd.f64(\
double %505, double %507, double\l... %513)\l  %515 = mul nsw i64 %indvars.iv, 25\l  %516 = getelementptr inbounds %struct.COMPLEX, \
ptr %4, i64 %515\l  %517 = load double, ptr %516, align 8\l  %518 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %515, i32 \
1\l  %519 = load double, ptr %518, align 8\l  %520 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %52\l  %521 = load double, \
ptr %520, align 8\l  %522 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %52, i32 1\l  %523 = load double, ptr %522, align \
8\l  %524 = fneg double %519\l  %525 = fmul double %523, %524\l  %526 = tail call double @llvm.fmuladd.f64(double %517, double %\
521, double\l... %525)\l  %527 = fmul double %517, %523\l  %528 = tail call double @llvm.fmuladd.f64(double %519, double %521, double\l... %\
527)\l  %529 = fadd double %512, %526\l  %530 = fadd double %514, %528\l  %531 = fsub double %512, %526\l  %532 = fsub double %514, %\
528\l  %533 = fadd double %497, %529\l  %534 = fadd double %498, %530\l  %535 = fsub double %497, %529\l  %536 = fsub double %498, %\
530\l  %537 = fadd double %499, %532\l  %538 = fsub double %500, %531\l  %539 = fsub double %499, %532\l  %540 = fadd double %500, %\
531\l  %541 = mul nsw i64 %indvars.iv, 5\l  %542 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %541\l  %543 = load double, \
ptr %542, align 8\l  %544 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %541, i32 1\l  %545 = load double, ptr %544, align \
8\l  %546 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %54\l  %547 = load double, ptr %546, align 8\l  %548 = getelementptr \
inbounds %struct.COMPLEX, ptr %80, i64 %54, i32 1\l  %549 = load double, ptr %548, align 8\l  %550 = fneg double %545\l  %551 = \
fmul double %549, %550\l  %552 = tail call double @llvm.fmuladd.f64(double %543, double %547, double\l... %551)\l  %553 = fmul double %\
543, %549\l  %554 = tail call double @llvm.fmuladd.f64(double %545, double %547, double\l... %553)\l  %555 = mul nsw i64 %indvars.iv, \
21\l  %556 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %555\l  %557 = load double, ptr %556, align 8\l  %558 = getelementptr \
inbounds %struct.COMPLEX, ptr %4, i64 %555, i32 1\l  %559 = load double, ptr %558, align 8\l  %560 = getelementptr inbounds %struct.COMPLEX, \
ptr %80, i64 %56\l  %561 = load double, ptr %560, align 8\l  %562 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %56, i32 \
1\l  %563 = load double, ptr %562, align 8\l  %564 = fneg double %559\l  %565 = fmul double %563, %564\l  %566 = tail call double @\
llvm.fmuladd.f64(double %557, double %561, double\l... %565)\l  %567 = fmul double %557, %563\l  %568 = tail call double @llvm.fmuladd.f64(\
double %559, double %561, double\l... %567)\l  %569 = fadd double %552, %566\l  %570 = fadd double %554, %568\l  %571 = fsub double %\
552, %566\l  %572 = fsub double %554, %568\l  %573 = mul nsw i64 %indvars.iv, 13\l  %574 = getelementptr inbounds %struct.COMPLEX, \
ptr %4, i64 %573\l  %575 = load double, ptr %574, align 8\l  %576 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %573, i32 \
1\l  %577 = load double, ptr %576, align 8\l  %578 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %58\l  %579 = load double, \
ptr %578, align 8\l  %580 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %58, i32 1\l  %581 = load double, ptr %580, align \
8\l  %582 = fneg double %577\l  %583 = fmul double %581, %582\l  %584 = tail call double @llvm.fmuladd.f64(double %575, double %\
579, double\l... %583)\l  %585 = fmul double %575, %581\l  %586 = tail call double @llvm.fmuladd.f64(double %577, double %579, double\l... %\
585)\l  %587 = mul nsw i64 %indvars.iv, 29\l  %588 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %587\l  %589 = load double, \
ptr %588, align 8\l  %590 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %587, i32 1\l  %591 = load double, ptr %590, align \
8\l  %592 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %60\l  %593 = load double, ptr %592, align 8\l  %594 = getelementptr \
inbounds %struct.COMPLEX, ptr %80, i64 %60, i32 1\l  %595 = load double, ptr %594, align 8\l  %596 = fneg double %591\l  %597 = \
fmul double %595, %596\l  %598 = tail call double @llvm.fmuladd.f64(double %589, double %593, double\l... %597)\l  %599 = fmul double %\
589, %595\l  %600 = tail call double @llvm.fmuladd.f64(double %591, double %593, double\l... %599)\l  %601 = fadd double %584, %\
598\l  %602 = fadd double %586, %600\l  %603 = fsub double %584, %598\l  %604 = fsub double %586, %600\l  %605 = fadd double %569, %\
601\l  %606 = fadd double %570, %602\l  %607 = fsub double %569, %601\l  %608 = fsub double %570, %602\l  %609 = fadd double %571, %\
604\l  %610 = fsub double %572, %603\l  %611 = fsub double %571, %604\l  %612 = fadd double %572, %603\l  %613 = fadd double %533, %\
605\l  %614 = fadd double %534, %606\l  %615 = fsub double %533, %605\l  %616 = fsub double %534, %606\l  %617 = fadd double %609, %\
610\l  %618 = fmul double %617, 0x3FE6A09E667F4BB8\l  %619 = fsub double %610, %609\l  %620 = fmul double %619, 0x3FE6A09E667F4BB8\l  %\
621 = fadd double %537, %618\l  %622 = fadd double %538, %620\l  %623 = fsub double %537, %618\l  %624 = fsub double %538, %620\l  %\
625 = fadd double %535, %608\l  %626 = fsub double %536, %607\l  %627 = fsub double %535, %608\l  %628 = fadd double %536, %607\l  %\
629 = fsub double %612, %611\l  %630 = fmul double %629, 0x3FE6A09E667F4BB8\l  %631 = fadd double %611, %612\l  %632 = fmul double %\
631, 0x3FE6A09E667F4BB8\l  %633 = fadd double %539, %630\l  %634 = fsub double %540, %632\l  %635 = fsub double %539, %630\l  %636 = \
fadd double %540, %632\l  %637 = mul nsw i64 %indvars.iv, 3\l  %638 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %637\l  %\
639 = load double, ptr %638, align 8\l  %640 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %637, i32 1\l  %641 = load double, \
ptr %640, align 8\l  %642 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %62\l  %643 = load double, ptr %642, align 8\l  %\
644 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %62, i32 1\l  %645 = load double, ptr %644, align 8\l  %646 = fneg double %\
641\l  %647 = fmul double %645, %646\l  %648 = tail call double @llvm.fmuladd.f64(double %639, double %643, double\l... %647)\l  %\
649 = fmul double %639, %645\l  %650 = tail call double @llvm.fmuladd.f64(double %641, double %643, double\l... %649)\l  %651 = \
mul nsw i64 %indvars.iv, 19\l  %652 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %651\l  %653 = load double, ptr %652, \
align 8\l  %654 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %651, i32 1\l  %655 = load double, ptr %654, align 8\l  %656 = \
getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %64\l  %657 = load double, ptr %656, align 8\l  %658 = getelementptr inbounds %\
struct.COMPLEX, ptr %80, i64 %64, i32 1\l  %659 = load double, ptr %658, align 8\l  %660 = fneg double %655\l  %661 = fmul double %\
659, %660\l  %662 = tail call double @llvm.fmuladd.f64(double %653, double %657, double\l... %661)\l  %663 = fmul double %653, %\
659\l  %664 = tail call double @llvm.fmuladd.f64(double %655, double %657, double\l... %663)\l  %665 = fadd double %648, %662\l  %\
666 = fadd double %650, %664\l  %667 = fsub double %648, %662\l  %668 = fsub double %650, %664\l  %669 = mul nsw i64 %indvars.iv, \
11\l  %670 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %669\l  %671 = load double, ptr %670, align 8\l  %672 = getelementptr \
inbounds %struct.COMPLEX, ptr %4, i64 %669, i32 1\l  %673 = load double, ptr %672, align 8\l  %674 = getelementptr inbounds %struct.COMPLEX, \
ptr %80, i64 %66\l  %675 = load double, ptr %674, align 8\l  %676 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %66, i32 \
1\l  %677 = load double, ptr %676, align 8\l  %678 = fneg double %673\l  %679 = fmul double %677, %678\l  %680 = tail call double @\
llvm.fmuladd.f64(double %671, double %675, double\l... %679)\l  %681 = fmul double %671, %677\l  %682 = tail call double @llvm.fmuladd.f64(\
double %673, double %675, double\l... %681)\l  %683 = mul nsw i64 %indvars.iv, 27\l  %684 = getelementptr inbounds %struct.COMPLEX, \
ptr %4, i64 %683\l  %685 = load double, ptr %684, align 8\l  %686 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %683, i32 \
1\l  %687 = load double, ptr %686, align 8\l  %688 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %68\l  %689 = load double, \
ptr %688, align 8\l  %690 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %68, i32 1\l  %691 = load double, ptr %690, align \
8\l  %692 = fneg double %687\l  %693 = fmul double %691, %692\l  %694 = tail call double @llvm.fmuladd.f64(double %685, double %\
689, double\l... %693)\l  %695 = fmul double %685, %691\l  %696 = tail call double @llvm.fmuladd.f64(double %687, double %689, double\l... %\
695)\l  %697 = fadd double %680, %694\l  %698 = fadd double %682, %696\l  %699 = fsub double %680, %694\l  %700 = fsub double %682, %\
696\l  %701 = fadd double %665, %697\l  %702 = fadd double %666, %698\l  %703 = fsub double %665, %697\l  %704 = fsub double %666, %\
698\l  %705 = fadd double %667, %700\l  %706 = fsub double %668, %699\l  %707 = fsub double %667, %700\l  %708 = fadd double %668, %\
699\l  %709 = mul nsw i64 %indvars.iv, 7\l  %710 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %709\l  %711 = load double, \
ptr %710, align 8\l  %712 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %709, i32 1\l  %713 = load double, ptr %712, align \
8\l  %714 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %70\l  %715 = load double, ptr %714, align 8\l  %716 = getelementptr \
inbounds %struct.COMPLEX, ptr %80, i64 %70, i32 1\l  %717 = load double, ptr %716, align 8\l  %718 = fneg double %713\l  %719 = \
fmul double %717, %718\l  %720 = tail call double @llvm.fmuladd.f64(double %711, double %715, double\l... %719)\l  %721 = fmul double %\
711, %717\l  %722 = tail call double @llvm.fmuladd.f64(double %713, double %715, double\l... %721)\l  %723 = mul nsw i64 %indvars.iv, \
23\l  %724 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %723\l  %725 = load double, ptr %724, align 8\l  %726 = getelementptr \
inbounds %struct.COMPLEX, ptr %4, i64 %723, i32 1\l  %727 = load double, ptr %726, align 8\l  %728 = getelementptr inbounds %struct.COMPLEX, \
ptr %80, i64 %72\l  %729 = load double, ptr %728, align 8\l  %730 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %72, i32 \
1\l  %731 = load double, ptr %730, align 8\l  %732 = fneg double %727\l  %733 = fmul double %731, %732\l  %734 = tail call double @\
llvm.fmuladd.f64(double %725, double %729, double\l... %733)\l  %735 = fmul double %725, %731\l  %736 = tail call double @llvm.fmuladd.f64(\
double %727, double %729, double\l... %735)\l  %737 = fadd double %720, %734\l  %738 = fadd double %722, %736\l  %739 = fsub double %\
720, %734\l  %740 = fsub double %722, %736\l  %741 = mul nsw i64 %indvars.iv, 15\l  %742 = getelementptr inbounds %struct.COMPLEX, \
ptr %4, i64 %741\l  %743 = load double, ptr %742, align 8\l  %744 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %741, i32 \
1\l  %745 = load double, ptr %744, align 8\l  %746 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %74\l  %747 = load double, \
ptr %746, align 8\l  %748 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %74, i32 1\l  %749 = load double, ptr %748, align \
8\l  %750 = fneg double %745\l  %751 = fmul double %749, %750\l  %752 = tail call double @llvm.fmuladd.f64(double %743, double %\
747, double\l... %751)\l  %753 = fmul double %743, %749\l  %754 = tail call double @llvm.fmuladd.f64(double %745, double %747, double\l... %\
753)\l  %755 = mul nsw i64 %indvars.iv, 31\l  %756 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %755\l  %757 = load double, \
ptr %756, align 8\l  %758 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %755, i32 1\l  %759 = load double, ptr %758, align \
8\l  %760 = getelementptr inbounds %struct.COMPLEX, ptr %80, i64 %76\l  %761 = load double, ptr %760, align 8\l  %762 = getelementptr \
inbounds %struct.COMPLEX, ptr %80, i64 %76, i32 1\l  %763 = load double, ptr %762, align 8\l  %764 = fneg double %759\l  %765 = \
fmul double %763, %764\l  %766 = tail call double @llvm.fmuladd.f64(double %757, double %761, double\l... %765)\l  %767 = fmul double %\
757, %763\l  %768 = tail call double @llvm.fmuladd.f64(double %759, double %761, double\l... %767)\l  %769 = fadd double %752, %\
766\l  %770 = fadd double %754, %768\l  %771 = fsub double %752, %766\l  %772 = fsub double %754, %768\l  %773 = fadd double %737, %\
769\l  %774 = fadd double %738, %770\l  %775 = fsub double %737, %769\l  %776 = fsub double %738, %770\l  %777 = fadd double %739, %\
772\l  %778 = fsub double %740, %771\l  %779 = fsub double %739, %772\l  %780 = fadd double %740, %771\l  %781 = fadd double %701, %\
773\l  %782 = fadd double %702, %774\l  %783 = fsub double %701, %773\l  %784 = fsub double %702, %774\l  %785 = fadd double %777, %\
778\l  %786 = fmul double %785, 0x3FE6A09E667F4BB8\l  %787 = fsub double %778, %777\l  %788 = fmul double %787, 0x3FE6A09E667F4BB8\l  %\
789 = fadd double %705, %786\l  %790 = fadd double %706, %788\l  %791 = fsub double %705, %786\l  %792 = fsub double %706, %788\l  %\
793 = fadd double %703, %776\l  %794 = fsub double %704, %775\l  %795 = fsub double %703, %776\l  %796 = fadd double %704, %775\l  %\
797 = fsub double %780, %779\l  %798 = fmul double %797, 0x3FE6A09E667F4BB8\l  %799 = fadd double %779, %780\l  %800 = fmul double %\
799, 0x3FE6A09E667F4BB8\l  %801 = fadd double %707, %798\l  %802 = fsub double %708, %800\l  %803 = fsub double %707, %798\l  %804 = \
fadd double %708, %800\l  %805 = fadd double %613, %781\l  %806 = fadd double %614, %782\l  %807 = fsub double %613, %781\l  %808 = \
fsub double %614, %782\l  %809 = fmul double %790, 0x3FD87DE2A6AEA312\l  %810 = tail call double @llvm.fmuladd.f64(double %789, \
double\l... 0x3FED906BCF32832F, double %809)\l  %811 = fmul double %789, 0xBFD87DE2A6AEA312\l  %812 = tail call double @llvm.fmuladd.f64(\
double %790, double\l... 0x3FED906BCF32832F, double %811)\l  %813 = fadd double %621, %810\l  %814 = fadd double %622, %812\l  %\
815 = fsub double %621, %810\l  %816 = fsub double %622, %812\l  %817 = fadd double %793, %794\l  %818 = fmul double %817, 0x3FE6A09E667F4BB8\l  %\
819 = fsub double %794, %793\l  %820 = fmul double %819, 0x3FE6A09E667F4BB8\l  %821 = fadd double %625, %818\l  %822 = fadd double %\
626, %820\l  %823 = fsub double %625, %818\l  %824 = fsub double %626, %820\l  %825 = fmul double %802, 0x3FED906BCF32832F\l  %826 = \
tail call double @llvm.fmuladd.f64(double %801, double\l... 0x3FD87DE2A6AEA312, double %825)\l  %827 = fmul double %801, 0xBFED906BCF32832F\l  %\
828 = tail call double @llvm.fmuladd.f64(double %802, double\l... 0x3FD87DE2A6AEA312, double %827)\l  %829 = fadd double %633, %\
826\l  %830 = fadd double %634, %828\l  %831 = fsub double %633, %826\l  %832 = fsub double %634, %828\l  %833 = fadd double %615, %\
784\l  %834 = fsub double %616, %783\l  %835 = fsub double %615, %784\l  %836 = fadd double %616, %783\l  %837 = fmul double %791, \
0xBFD87DE2A6AEA312\l  %838 = tail call double @llvm.fmuladd.f64(double %792, double\l... 0x3FED906BCF32832F, double %837)\l  %839 = \
fmul double %792, 0x3FD87DE2A6AEA312\l  %840 = tail call double @llvm.fmuladd.f64(double %791, double\l... 0x3FED906BCF32832F, double %\
839)\l  %841 = fadd double %623, %838\l  %842 = fsub double %624, %840\l  %843 = fsub double %623, %838\l  %844 = fadd double %624, %\
840\l  %845 = fsub double %796, %795\l  %846 = fmul double %845, 0x3FE6A09E667F4BB8\l  %847 = fadd double %795, %796\l  %848 = fmul \
double %847, 0x3FE6A09E667F4BB8\l  %849 = fadd double %627, %846\l  %850 = fsub double %628, %848\l  %851 = fsub double %627, %846\l  %\
852 = fadd double %628, %848\l  %853 = fmul double %803, 0xBFED906BCF32832F\l  %854 = tail call double @llvm.fmuladd.f64(double %\
804, double\l... 0x3FD87DE2A6AEA312, double %853)\l  %855 = fmul double %804, 0x3FED906BCF32832F\l  %856 = tail call double @llvm.fmuladd.f64(\
double %803, double\l... 0x3FD87DE2A6AEA312, double %855)\l  %857 = fadd double %635, %854\l  %858 = fsub double %636, %856\l  %\
859 = fsub double %635, %854\l  %860 = fadd double %636, %856\l  %861 = fadd double %414, %805\l  store double %861, ptr %.014371438, \
align 8\l  %862 = fadd double %415, %806\l  %863 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 0, i32 1\l  store \
double %862, ptr %863, align 8\l  %864 = fsub double %414, %805\l  %865 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, \
i64 %17\l  store double %864, ptr %865, align 8\l  %866 = fsub double %415, %806\l  %867 = getelementptr inbounds %struct.COMPLEX, \
ptr %.014371438, i64 %17, i32\l... 1\l  store double %866, ptr %867, align 8\l  %868 = fmul double %814, 0x3FC8F8B83C6993FD\l  %\
869 = tail call double @llvm.fmuladd.f64(double %813, double\l... 0x3FEF6297CFF75494, double %868)\l  %870 = fmul double %813, 0xBFC8F8B83C6993FD\l  %\
871 = tail call double @llvm.fmuladd.f64(double %814, double\l... 0x3FEF6297CFF75494, double %870)\l  %872 = fadd double %422, %\
869\l  %873 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %46\l  store double %872, ptr %873, align 8\l  %874 = \
fadd double %423, %871\l  %875 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %46, i32\l... 1\l  store double %874, \
ptr %875, align 8\l  %876 = fsub double %422, %869\l  %877 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %48\l  \
store double %876, ptr %877, align 8\l  %878 = fsub double %423, %871\l  %879 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, \
i64 %48, i32\l... 1\l  store double %878, ptr %879, align 8\l  %880 = fmul double %822, 0x3FD87DE2A6AEA312\l  %881 = tail call double @\
llvm.fmuladd.f64(double %821, double\l... 0x3FED906BCF32832F, double %880)\l  %882 = fmul double %821, 0xBFD87DE2A6AEA312\l  %883 = \
tail call double @llvm.fmuladd.f64(double %822, double\l... 0x3FED906BCF32832F, double %882)\l  %884 = fadd double %430, %881\l  %\
885 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %31\l  store double %884, ptr %885, align 8\l  %886 = fadd double %\
431, %883\l  %887 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %31, i32\l... 1\l  store double %886, ptr %887, \
align 8\l  %888 = fsub double %430, %881\l  %889 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %33\l  store double %\
888, ptr %889, align 8\l  %890 = fsub double %431, %883\l  %891 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %\
33, i32\l... 1\l  store double %890, ptr %891, align 8\l  %892 = fmul double %830, 0x3FE1C73B39AE76C7\l  %893 = tail call double @\
llvm.fmuladd.f64(double %829, double\l... 0x3FEA9B66290EB1A3, double %892)\l  %894 = fmul double %829, 0xBFE1C73B39AE76C7\l  %895 = \
tail call double @llvm.fmuladd.f64(double %830, double\l... 0x3FEA9B66290EB1A3, double %894)\l  %896 = fadd double %438, %893\l  %\
897 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %62\l  store double %896, ptr %897, align 8\l  %898 = fadd double %\
439, %895\l  %899 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %62, i32\l... 1\l  store double %898, ptr %899, \
align 8\l  %900 = fsub double %438, %893\l  %901 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %64\l  store double %\
900, ptr %901, align 8\l  %902 = fsub double %439, %895\l  %903 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %\
64, i32\l... 1\l  store double %902, ptr %903, align 8\l  %904 = fadd double %833, %834\l  %905 = fmul double %904, 0x3FE6A09E667F4BB8\l  %\
906 = fsub double %834, %833\l  %907 = fmul double %906, 0x3FE6A09E667F4BB8\l  %908 = fadd double %442, %905\l  %909 = getelementptr \
inbounds %struct.COMPLEX, ptr %.014371438, i64 %23\l  store double %908, ptr %909, align 8\l  %910 = fadd double %443, %907\l  %\
911 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %23, i32\l... 1\l  store double %910, ptr %911, align 8\l  %912 = \
fsub double %442, %905\l  %913 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %25\l  store double %912, ptr %913, \
align 8\l  %914 = fsub double %443, %907\l  %915 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %25, i32\l... 1\l  \
store double %914, ptr %915, align 8\l  %916 = fmul double %842, 0x3FEA9B66290EB1A3\l  %917 = tail call double @llvm.fmuladd.f64(\
double %841, double\l... 0x3FE1C73B39AE76C7, double %916)\l  %918 = fmul double %841, 0xBFEA9B66290EB1A3\l  %919 = tail call double @\
llvm.fmuladd.f64(double %842, double\l... 0x3FE1C73B39AE76C7, double %918)\l  %920 = fadd double %450, %917\l  %921 = getelementptr \
inbounds %struct.COMPLEX, ptr %.014371438, i64 %54\l  store double %920, ptr %921, align 8\l  %922 = fadd double %451, %919\l  %\
923 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %54, i32\l... 1\l  store double %922, ptr %923, align 8\l  %924 = \
fsub double %450, %917\l  %925 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %56\l  store double %924, ptr %925, \
align 8\l  %926 = fsub double %451, %919\l  %927 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %56, i32\l... 1\l  \
store double %926, ptr %927, align 8\l  %928 = fmul double %850, 0x3FED906BCF32832F\l  %929 = tail call double @llvm.fmuladd.f64(\
double %849, double\l... 0x3FD87DE2A6AEA312, double %928)\l  %930 = fmul double %849, 0xBFED906BCF32832F\l  %931 = tail call double @\
llvm.fmuladd.f64(double %850, double\l... 0x3FD87DE2A6AEA312, double %930)\l  %932 = fadd double %458, %929\l  %933 = getelementptr \
inbounds %struct.COMPLEX, ptr %.014371438, i64 %39\l  store double %932, ptr %933, align 8\l  %934 = fadd double %459, %931\l  %\
935 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %39, i32\l... 1\l  store double %934, ptr %935, align 8\l  %936 = \
fsub double %458, %929\l  %937 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %41\l  store double %936, ptr %937, \
align 8\l  %938 = fsub double %459, %931\l  %939 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %41, i32\l... 1\l  \
store double %938, ptr %939, align 8\l  %940 = fmul double %858, 0x3FEF6297CFF75494\l  %941 = tail call double @llvm.fmuladd.f64(\
double %857, double\l... 0x3FC8F8B83C6993FD, double %940)\l  %942 = fmul double %857, 0xBFEF6297CFF75494\l  %943 = tail call double @\
llvm.fmuladd.f64(double %858, double\l... 0x3FC8F8B83C6993FD, double %942)\l  %944 = fadd double %466, %941\l  %945 = getelementptr \
inbounds %struct.COMPLEX, ptr %.014371438, i64 %70\l  store double %944, ptr %945, align 8\l  %946 = fadd double %467, %943\l  %\
947 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %70, i32\l... 1\l  store double %946, ptr %947, align 8\l  %948 = \
fsub double %466, %941\l  %949 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %72\l  store double %948, ptr %949, \
align 8\l  %950 = fsub double %467, %943\l  %951 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %72, i32\l... 1\l  \
store double %950, ptr %951, align 8\l  %952 = fadd double %416, %808\l  %953 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, \
i64 %19\l  store double %952, ptr %953, align 8\l  %954 = fsub double %417, %807\l  %955 = getelementptr inbounds %struct.COMPLEX, \
ptr %.014371438, i64 %19, i32\l... 1\l  store double %954, ptr %955, align 8\l  %956 = fsub double %416, %808\l  %957 = getelementptr \
inbounds %struct.COMPLEX, ptr %.014371438, i64 %21\l  store double %956, ptr %957, align 8\l  %958 = fadd double %417, %807\l  %\
959 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %21, i32\l... 1\l  store double %958, ptr %959, align 8\l  %960 = \
fmul double %815, 0xBFC8F8B83C6993FD\l  %961 = tail call double @llvm.fmuladd.f64(double %816, double\l... 0x3FEF6297CFF75494, double %\
960)\l  %962 = fmul double %816, 0x3FC8F8B83C6993FD\l  %963 = tail call double @llvm.fmuladd.f64(double %815, double\l... 0x3FEF6297CFF75494, \
double %962)\l  %964 = fadd double %424, %961\l  %965 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %50\l  store \
double %964, ptr %965, align 8\l  %966 = fsub double %425, %963\l  %967 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, \
i64 %50, i32\l... 1\l  store double %966, ptr %967, align 8\l  %968 = fsub double %424, %961\l  %969 = getelementptr inbounds %struct.COMPLEX, \
ptr %.014371438, i64 %52\l  store double %968, ptr %969, align 8\l  %970 = fadd double %425, %963\l  %971 = getelementptr inbounds %\
struct.COMPLEX, ptr %.014371438, i64 %52, i32\l... 1\l  store double %970, ptr %971, align 8\l  %972 = fmul double %823, 0xBFD87DE2A6AEA312\l  %\
973 = tail call double @llvm.fmuladd.f64(double %824, double\l... 0x3FED906BCF32832F, double %972)\l  %974 = fmul double %824, 0x3FD87DE2A6AEA312\l  %\
975 = tail call double @llvm.fmuladd.f64(double %823, double\l... 0x3FED906BCF32832F, double %974)\l  %976 = fadd double %432, %\
973\l  %977 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %35\l  store double %976, ptr %977, align 8\l  %978 = \
fsub double %433, %975\l  %979 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %35, i32\l... 1\l  store double %978, \
ptr %979, align 8\l  %980 = fsub double %432, %973\l  %981 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %37\l  \
store double %980, ptr %981, align 8\l  %982 = fadd double %433, %975\l  %983 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, \
i64 %37, i32\l... 1\l  store double %982, ptr %983, align 8\l  %984 = fmul double %831, 0xBFE1C73B39AE76C7\l  %985 = tail call double @\
llvm.fmuladd.f64(double %832, double\l... 0x3FEA9B66290EB1A3, double %984)\l  %986 = fmul double %832, 0x3FE1C73B39AE76C7\l  %987 = \
tail call double @llvm.fmuladd.f64(double %831, double\l... 0x3FEA9B66290EB1A3, double %986)\l  %988 = fadd double %440, %985\l  %\
989 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %66\l  store double %988, ptr %989, align 8\l  %990 = fsub double %\
441, %987\l  %991 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %66, i32\l... 1\l  store double %990, ptr %991, \
align 8\l  %992 = fsub double %440, %985\l  %993 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %68\l  store double %\
992, ptr %993, align 8\l  %994 = fadd double %441, %987\l  %995 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %\
68, i32\l... 1\l  store double %994, ptr %995, align 8\l  %996 = fsub double %836, %835\l  %997 = fmul double %996, 0x3FE6A09E667F4BB8\l  %\
998 = fadd double %835, %836\l  %999 = fmul double %998, 0x3FE6A09E667F4BB8\l  %1000 = fadd double %444, %997\l  %1001 = getelementptr \
inbounds %struct.COMPLEX, ptr %.014371438, i64 %27\l  store double %1000, ptr %1001, align 8\l  %1002 = fsub double %445, %999\l  %\
1003 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %27,\l... i32 1\l  store double %1002, ptr %1003, align 8\l  %\
1004 = fsub double %444, %997\l  %1005 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %29\l  store double %1004, \
ptr %1005, align 8\l  %1006 = fadd double %445, %999\l  %1007 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %29,\l... \
i32 1\l  store double %1006, ptr %1007, align 8\l  %1008 = fmul double %843, 0xBFEA9B66290EB1A3\l  %1009 = tail call double @llvm.fmuladd.f64(\
double %844, double\l... 0x3FE1C73B39AE76C7, double %1008)\l  %1010 = fmul double %844, 0x3FEA9B66290EB1A3\l  %1011 = tail call \
double @llvm.fmuladd.f64(double %843, double\l... 0x3FE1C73B39AE76C7, double %1010)\l  %1012 = fadd double %452, %1009\l  %1013 = \
getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %58\l  store double %1012, ptr %1013, align 8\l  %1014 = fsub double %\
453, %1011\l  %1015 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %58,\l... i32 1\l  store double %1014, ptr %1015, \
align 8\l  %1016 = fsub double %452, %1009\l  %1017 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %60\l  store \
double %1016, ptr %1017, align 8\l  %1018 = fadd double %453, %1011\l  %1019 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, \
i64 %60,\l... i32 1\l  store double %1018, ptr %1019, align 8\l  %1020 = fmul double %851, 0xBFED906BCF32832F\l  %1021 = tail call \
double @llvm.fmuladd.f64(double %852, double\l... 0x3FD87DE2A6AEA312, double %1020)\l  %1022 = fmul double %852, 0x3FED906BCF32832F\l  %\
1023 = tail call double @llvm.fmuladd.f64(double %851, double\l... 0x3FD87DE2A6AEA312, double %1022)\l  %1024 = fadd double %460, %\
1021\l  %1025 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %43\l  store double %1024, ptr %1025, align 8\l  %1026 = \
fsub double %461, %1023\l  %1027 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %43,\l... i32 1\l  store double %\
1026, ptr %1027, align 8\l  %1028 = fsub double %460, %1021\l  %1029 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, \
i64 %45\l  store double %1028, ptr %1029, align 8\l  %1030 = fadd double %461, %1023\l  %1031 = getelementptr inbounds %struct.COMPLEX, \
ptr %.014371438, i64 %45,\l... i32 1\l  store double %1030, ptr %1031, align 8\l  %1032 = fmul double %859, 0xBFEF6297CFF75494\l  %\
1033 = tail call double @llvm.fmuladd.f64(double %860, double\l... 0x3FC8F8B83C6993FD, double %1032)\l  %1034 = fmul double %860, \
0x3FEF6297CFF75494\l  %1035 = tail call double @llvm.fmuladd.f64(double %859, double\l... 0x3FC8F8B83C6993FD, double %1034)\l  %\
1036 = fadd double %468, %1033\l  %1037 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %74\l  store double %1036, \
ptr %1037, align 8\l  %1038 = fsub double %469, %1035\l  %1039 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, i64 %74,\l... \
i32 1\l  store double %1038, ptr %1039, align 8\l  %1040 = fsub double %468, %1033\l  %1041 = getelementptr inbounds %struct.COMPLEX, \
ptr %.014371438, i64 %76\l  store double %1040, ptr %1041, align 8\l  %1042 = fadd double %469, %1035\l  %1043 = getelementptr inbounds %\
struct.COMPLEX, ptr %.014371438, i64 %76,\l... i32 1\l  store double %1042, ptr %1043, align 8\l  %indvars.iv.next1442 = add nsw \
i64 %indvars.iv1441, 1\l  %indvars.iv.next = add i64 %indvars.iv, %78\l  %1044 = getelementptr inbounds %struct.COMPLEX, ptr %.014371438, \
i64 1\l  %exitcond.not = icmp eq i64 %indvars.iv.next1442, %wide.trip.count\l  br i1 %exitcond.not, label %.loopexit, label %79, !\
llvm.loop !4\l|{<s0>T|<s1>F}}" filled record #3d50c3ff #be242e70
edge Node0x2959a410 Node0x2969a980 4 13.375 282.56 13.375 282.45 13.375 282.32 13.375 282.19 solid black
edge Node0x2969a980 Node0x296a7c10 4 10.778 280.62 9.8352 280.62 8.8531 280.17 8.1559 279.77 solid black
edge Node0x2969a980 Node0x296a7c60 4 14.667 280.46 14.642 280.34 14.622 280.22 14.607 280.09 solid black
edge Node0x296a7c10 Node0x2960aaa0 4 5.9028 278.52 5.9028 278.32 5.9005 278.11 5.8961 277.91 solid black
edge Node0x296a7c10 Node0x296f8080 13 8.4861 278.52 8.4861 278.12 8.8418 278.14 8.9583 277.77 10.946 271.35 9.412 269.37 9.5417 262.66 10.065 235.54 26.413 39.794 9.5417 18.558 9.2141 18.146 7.7963 17.924 6.8687 17.82 solid black
edge Node0x296a7c60 Node0x2969a980 4 14.741 279.96 14.73 280.08 14.715 280.2 14.694 280.32 solid black
edge Node0x2960aaa0 Node0x296a85f0 4 5.1339 263.16 5.1334 263.04 5.1328 262.92 5.1323 262.79 solid black
edge Node0x296a85f0 Node0x296f8080 4 2.2917 18.558 2.2917 17.965 4.1048 17.804 5.2096 17.761 solid black
edge Node0x296a85f0 Node0x296a85f0 7 6.8833 18.56 8.4893 -11.997 9.4167 -11.841 9.4167 79.662 9.4167 94.994 9.3265 107.76 9.1688 118.25 solid black
stop
