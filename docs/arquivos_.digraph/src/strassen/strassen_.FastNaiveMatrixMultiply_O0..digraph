graph 1 23.438 49.792
node Node0x6019630 21.431 43.84 4.0139 11.903 "{7:\l|  %8 = alloca ptr, align 8\l  %9 = alloca ptr, align 8\l  %10 = alloca ptr, align 8\l  %11 = alloca i32, align 4\l  %12 = \
alloca i32, align 4\l  %13 = alloca i32, align 4\l  %14 = alloca i32, align 4\l  %15 = alloca i64, align 8\l  %16 = alloca i64, \
align 8\l  %17 = alloca i64, align 8\l  %18 = alloca i64, align 8\l  %19 = alloca i32, align 4\l  %20 = alloca i32, align 4\l  %\
21 = alloca ptr, align 8\l  %22 = alloca ptr, align 8\l  %23 = alloca double, align 8\l  %24 = alloca double, align 8\l  %25 = alloca \
double, align 8\l  %26 = alloca double, align 8\l  %27 = alloca double, align 8\l  %28 = alloca double, align 8\l  %29 = alloca \
double, align 8\l  %30 = alloca double, align 8\l  %31 = alloca double, align 8\l  %32 = alloca i32, align 4\l  %33 = alloca double, \
align 8\l  store ptr %0, ptr %8, align 8\l  store ptr %1, ptr %9, align 8\l  store ptr %2, ptr %10, align 8\l  store i32 %3, ptr %\
11, align 4\l  store i32 %4, ptr %12, align 4\l  store i32 %5, ptr %13, align 4\l  store i32 %6, ptr %14, align 4\l  %34 = load \
i32, ptr %14, align 4\l  %35 = shl i32 %34, 3\l  %36 = zext i32 %35 to i64\l  store i64 %36, ptr %15, align 8\l  %37 = load i32, \
ptr %13, align 4\l  %38 = shl i32 %37, 3\l  %39 = zext i32 %38 to i64\l  store i64 %39, ptr %16, align 8\l  %40 = load i32, ptr %\
11, align 4\l  %41 = shl i32 %40, 3\l  %42 = zext i32 %41 to i64\l  store i64 %42, ptr %17, align 8\l  %43 = load i32, ptr %12, \
align 4\l  %44 = load i32, ptr %11, align 4\l  %45 = sub i32 %43, %44\l  %46 = shl i32 %45, 3\l  %47 = zext i32 %46 to i64\l  store \
i64 %47, ptr %18, align 8\l  %48 = load ptr, ptr %9, align 8\l  store ptr %48, ptr %21, align 8\l  store i32 0, ptr %20, align 4\l  \
br label %49\l}" filled record #3d50c3ff #f6a38570
node Node0x601e2b0 21.431 36.59 4.0139 1.5972 "{49:\l|  %50 = load i32, ptr %20, align 4\l  %51 = load i32, ptr %11, align 4\l  %52 = icmp ult i32 %50, %51\l  br i1 %52, label %\
53, label %216\l|{<s0>T|<s1>F}}" filled record #3d50c3ff #ec7f6370
node Node0x601e500 17.903 34.861 3.5556 0.86111 "{53:\l|  store i32 0, ptr %19, align 4\l  br label %54\l}" filled record #3d50c3ff #ec7f6370
node Node0x601e550 22.431 34.861 1.1528 0.65278 "{216:\l|  ret void\l}" filled record #3d50c3ff #f6a38570
node Node0x601e730 17.208 33.132 4.0139 1.5972 "{54:\l|  %55 = load i32, ptr %19, align 4\l  %56 = load i32, ptr %11, align 4\l  %57 = icmp ult i32 %55, %56\l  br i1 %57, label %\
58, label %202\l|{<s0>T|<s1>F}}" filled record #3d50c3ff #d6524470
node Node0x601e980 11.139 25.465 6.4167 12.736 "{58:\l|  %59 = load ptr, ptr %10, align 8\l  %60 = load i32, ptr %19, align 4\l  %61 = zext i32 %60 to i64\l  %62 = getelementptr \
inbounds double, ptr %59, i64 %61\l  store ptr %62, ptr %22, align 8\l  %63 = load ptr, ptr %21, align 8\l  %64 = getelementptr \
inbounds double, ptr %63, i32 1\l  store ptr %64, ptr %21, align 8\l  %65 = load double, ptr %63, align 8\l  store double %65, ptr %\
23, align 8\l  %66 = load double, ptr %23, align 8\l  %67 = load ptr, ptr %22, align 8\l  %68 = load double, ptr %67, align 8\l  %\
69 = fmul double %66, %68\l  store double %69, ptr %24, align 8\l  %70 = load double, ptr %23, align 8\l  %71 = load ptr, ptr %22, \
align 8\l  %72 = getelementptr inbounds double, ptr %71, i64 1\l  %73 = load double, ptr %72, align 8\l  %74 = fmul double %70, %\
73\l  store double %74, ptr %25, align 8\l  %75 = load double, ptr %23, align 8\l  %76 = load ptr, ptr %22, align 8\l  %77 = getelementptr \
inbounds double, ptr %76, i64 2\l  %78 = load double, ptr %77, align 8\l  %79 = fmul double %75, %78\l  store double %79, ptr %26, \
align 8\l  %80 = load double, ptr %23, align 8\l  %81 = load ptr, ptr %22, align 8\l  %82 = getelementptr inbounds double, ptr %\
81, i64 3\l  %83 = load double, ptr %82, align 8\l  %84 = fmul double %80, %83\l  store double %84, ptr %27, align 8\l  %85 = load \
double, ptr %23, align 8\l  %86 = load ptr, ptr %22, align 8\l  %87 = getelementptr inbounds double, ptr %86, i64 4\l  %88 = load \
double, ptr %87, align 8\l  %89 = fmul double %85, %88\l  store double %89, ptr %28, align 8\l  %90 = load double, ptr %23, align \
8\l  %91 = load ptr, ptr %22, align 8\l  %92 = getelementptr inbounds double, ptr %91, i64 5\l  %93 = load double, ptr %92, align \
8\l  %94 = fmul double %90, %93\l  store double %94, ptr %29, align 8\l  %95 = load double, ptr %23, align 8\l  %96 = load ptr, \
ptr %22, align 8\l  %97 = getelementptr inbounds double, ptr %96, i64 6\l  %98 = load double, ptr %97, align 8\l  %99 = fmul double %\
95, %98\l  store double %99, ptr %30, align 8\l  %100 = load double, ptr %23, align 8\l  %101 = load ptr, ptr %22, align 8\l  %102 = \
getelementptr inbounds double, ptr %101, i64 7\l  %103 = load double, ptr %102, align 8\l  %104 = fmul double %100, %103\l  store \
double %104, ptr %31, align 8\l  store i32 1, ptr %32, align 4\l  br label %105\l}" filled record #3d50c3ff #d6524470
node Node0x601e9d0 18.986 25.465 4.125 3.1528 "{202:\l|  %203 = load ptr, ptr %21, align 8\l  %204 = ptrtoint ptr %203 to i64\l  %205 = load i64, ptr %16, align 8\l  %206 = add \
i64 %204, %205\l  %207 = inttoptr i64 %206 to ptr\l  store ptr %207, ptr %21, align 8\l  %208 = load ptr, ptr %8, align 8\l  %209 = \
ptrtoint ptr %208 to i64\l  %210 = load i64, ptr %18, align 8\l  %211 = add i64 %209, %210\l  %212 = inttoptr i64 %211 to ptr\l  \
store ptr %212, ptr %8, align 8\l  br label %213\l}" filled record #3d50c3ff #ec7f6370
node Node0x601df60 10.236 17.799 4.2361 1.5972 "{105:\l|  %106 = load i32, ptr %32, align 4\l  %107 = load i32, ptr %11, align 4\l  %108 = icmp ult i32 %106, %107\l  br i1 %108, \
label %109, label %168\l|{<s0>T|<s1>F}}" filled record #b70d28ff #b70d2870
node Node0x60216f0 4.4722 9.2986 8.9444 14.403 "{109:\l|  %110 = load ptr, ptr %21, align 8\l  %111 = getelementptr inbounds double, ptr %110, i32 1\l  store ptr %111, ptr %21, \
align 8\l  %112 = load double, ptr %110, align 8\l  store double %112, ptr %33, align 8\l  %113 = load ptr, ptr %22, align 8\l  %\
114 = ptrtoint ptr %113 to i64\l  %115 = load i64, ptr %15, align 8\l  %116 = add i64 %114, %115\l  %117 = inttoptr i64 %116 to \
ptr\l  store ptr %117, ptr %22, align 8\l  %118 = load double, ptr %33, align 8\l  %119 = load ptr, ptr %22, align 8\l  %120 = load \
double, ptr %119, align 8\l  %121 = load double, ptr %24, align 8\l  %122 = call double @llvm.fmuladd.f64(double %118, double %120, \
double %121)\l  store double %122, ptr %24, align 8\l  %123 = load double, ptr %33, align 8\l  %124 = load ptr, ptr %22, align 8\l  %\
125 = getelementptr inbounds double, ptr %124, i64 1\l  %126 = load double, ptr %125, align 8\l  %127 = load double, ptr %25, align \
8\l  %128 = call double @llvm.fmuladd.f64(double %123, double %126, double %127)\l  store double %128, ptr %25, align 8\l  %129 = \
load double, ptr %33, align 8\l  %130 = load ptr, ptr %22, align 8\l  %131 = getelementptr inbounds double, ptr %130, i64 2\l  %\
132 = load double, ptr %131, align 8\l  %133 = load double, ptr %26, align 8\l  %134 = call double @llvm.fmuladd.f64(double %129, \
double %132, double %133)\l  store double %134, ptr %26, align 8\l  %135 = load double, ptr %33, align 8\l  %136 = load ptr, ptr %\
22, align 8\l  %137 = getelementptr inbounds double, ptr %136, i64 3\l  %138 = load double, ptr %137, align 8\l  %139 = load double, \
ptr %27, align 8\l  %140 = call double @llvm.fmuladd.f64(double %135, double %138, double %139)\l  store double %140, ptr %27, align \
8\l  %141 = load double, ptr %33, align 8\l  %142 = load ptr, ptr %22, align 8\l  %143 = getelementptr inbounds double, ptr %142, \
i64 4\l  %144 = load double, ptr %143, align 8\l  %145 = load double, ptr %28, align 8\l  %146 = call double @llvm.fmuladd.f64(double %\
141, double %144, double %145)\l  store double %146, ptr %28, align 8\l  %147 = load double, ptr %33, align 8\l  %148 = load ptr, \
ptr %22, align 8\l  %149 = getelementptr inbounds double, ptr %148, i64 5\l  %150 = load double, ptr %149, align 8\l  %151 = load \
double, ptr %29, align 8\l  %152 = call double @llvm.fmuladd.f64(double %147, double %150, double %151)\l  store double %152, ptr %\
29, align 8\l  %153 = load double, ptr %33, align 8\l  %154 = load ptr, ptr %22, align 8\l  %155 = getelementptr inbounds double, \
ptr %154, i64 6\l  %156 = load double, ptr %155, align 8\l  %157 = load double, ptr %30, align 8\l  %158 = call double @llvm.fmuladd.f64(\
double %153, double %156, double %157)\l  store double %158, ptr %30, align 8\l  %159 = load double, ptr %33, align 8\l  %160 = \
load ptr, ptr %22, align 8\l  %161 = getelementptr inbounds double, ptr %160, i64 7\l  %162 = load double, ptr %161, align 8\l  %\
163 = load double, ptr %31, align 8\l  %164 = call double @llvm.fmuladd.f64(double %159, double %162, double %163)\l  store double %\
164, ptr %31, align 8\l  br label %165\l}" filled record #b70d28ff #b70d2870
node Node0x6021740 12.931 9.2986 6.4167 8.9861 "{168:\l|  %169 = load ptr, ptr %21, align 8\l  %170 = ptrtoint ptr %169 to i64\l  %171 = load i64, ptr %17, align 8\l  %172 = sub \
i64 %170, %171\l  %173 = inttoptr i64 %172 to ptr\l  store ptr %173, ptr %21, align 8\l  %174 = load double, ptr %24, align 8\l  %\
175 = load ptr, ptr %8, align 8\l  store double %174, ptr %175, align 8\l  %176 = load double, ptr %25, align 8\l  %177 = load ptr, \
ptr %8, align 8\l  %178 = getelementptr inbounds double, ptr %177, i64 1\l  store double %176, ptr %178, align 8\l  %179 = load \
double, ptr %26, align 8\l  %180 = load ptr, ptr %8, align 8\l  %181 = getelementptr inbounds double, ptr %180, i64 2\l  store double %\
179, ptr %181, align 8\l  %182 = load double, ptr %27, align 8\l  %183 = load ptr, ptr %8, align 8\l  %184 = getelementptr inbounds \
double, ptr %183, i64 3\l  store double %182, ptr %184, align 8\l  %185 = load double, ptr %28, align 8\l  %186 = load ptr, ptr %\
8, align 8\l  %187 = getelementptr inbounds double, ptr %186, i64 4\l  store double %185, ptr %187, align 8\l  %188 = load double, \
ptr %29, align 8\l  %189 = load ptr, ptr %8, align 8\l  %190 = getelementptr inbounds double, ptr %189, i64 5\l  store double %188, \
ptr %190, align 8\l  %191 = load double, ptr %30, align 8\l  %192 = load ptr, ptr %8, align 8\l  %193 = getelementptr inbounds double, \
ptr %192, i64 6\l  store double %191, ptr %193, align 8\l  %194 = load double, ptr %31, align 8\l  %195 = load ptr, ptr %8, align \
8\l  %196 = getelementptr inbounds double, ptr %195, i64 7\l  store double %194, ptr %196, align 8\l  %197 = load ptr, ptr %8, align \
8\l  %198 = getelementptr inbounds double, ptr %197, i64 8\l  store ptr %198, ptr %8, align 8\l  br label %199\l}" filled record #3d50c3ff #d6524470
node Node0x6023fc0 7.9444 0.95833 4.0139 1.2778 "{165:\l|  %166 = load i32, ptr %32, align 4\l  %167 = add i32 %166, 1\l  store i32 %167, ptr %32, align 4\l  br label %105, !llvm.loop !\
4\l}" filled record #b70d28ff #b70d2870
node Node0x6020b10 14.306 0.95833 4.0139 1.2778 "{199:\l|  %200 = load i32, ptr %19, align 4\l  %201 = add i32 %200, 8\l  store i32 %201, ptr %19, align 4\l  br label %54, !llvm.loop !\
6\l}" filled record #3d50c3ff #d6524470
node Node0x6021510 20.208 17.799 4.0139 1.2778 "{213:\l|  %214 = load i32, ptr %20, align 4\l  %215 = add i32 %214, 1\l  store i32 %215, ptr %20, align 4\l  br label %49, !llvm.loop !\
7\l}" filled record #3d50c3ff #ec7f6370
edge Node0x6019630 Node0x601e2b0 4 21.431 37.895 21.431 37.765 21.431 37.641 21.431 37.526 solid black
edge Node0x601e2b0 Node0x601e500 4 19.403 35.951 18.98 35.951 18.595 35.666 18.321 35.389 solid black
edge Node0x601e2b0 Node0x601e550 4 22.431 35.792 22.431 35.64 22.431 35.474 22.431 35.326 solid black
edge Node0x601e500 Node0x601e730 4 17.735 34.435 17.688 34.32 17.635 34.19 17.581 34.059 solid black
edge Node0x601e730 Node0x601e980 4 15.181 32.493 14.546 32.493 14.01 32.275 13.557 31.916 solid black
edge Node0x601e730 Node0x601e9d0 4 18.208 32.333 18.208 30.568 18.466 28.562 18.685 27.179 solid black
edge Node0x601e980 Node0x601df60 4 10.389 19.104 10.373 18.973 10.359 18.849 10.345 18.734 solid black
edge Node0x601e9d0 Node0x6021510 4 19.236 23.892 19.495 22.274 19.889 19.811 20.086 18.575 solid black
edge Node0x601df60 Node0x60216f0 4 8.0972 17.16 7.4626 17.16 6.9387 16.946 6.5062 16.588 solid black
edge Node0x601df60 Node0x6021740 4 11.292 17 11.292 15.995 11.427 14.932 11.621 13.927 solid black
edge Node0x60216f0 Node0x6023fc0 4 7.4726 2.1019 7.5295 1.9655 7.5826 1.8386 7.6309 1.7228 solid black
edge Node0x6021740 Node0x6020b10 4 13.67 4.8122 13.868 3.6197 14.059 2.4622 14.179 1.7352 solid black
edge Node0x6023fc0 Node0x601df60 10 8.7237 1.5916 8.8628 1.7415 8.9889 1.9124 9.0694 2.0972 9.7093 3.5652 9.2025 14.948 9.5972 16.5 9.6288 16.624 9.6734 16.75 9.7246 16.872 solid black
edge Node0x6020b10 Node0x601e730 10 15.791 1.5916 15.979 1.7309 16.146 1.898 16.264 2.0972 17.104 3.5198 16.519 30.204 16.792 31.833 16.812 31.954 16.841 32.079 16.875 32.202 solid black
edge Node0x6021510 Node0x601e2b0 7 20.793 18.433 20.944 18.631 21.086 18.86 21.167 19.097 22.222 22.199 21.685 32.504 21.491 35.654 solid black
stop
