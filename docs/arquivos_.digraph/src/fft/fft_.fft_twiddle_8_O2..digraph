graph 1 16.502 68.687
node Node0xf5a7880 8.75 67.993 7.2222 1.3889 "{8:\l|  %9 = sub nsw i32 %1, %0\l  %10 = icmp slt i32 %9, 128\l  br i1 %10, label %tailrecurse._crit_edge, label %tailrecurse\l|{<\
s0>T|<s1>F}}" filled record #3d50c3ff #d0473d70
node Node0xf54f500 7.5833 62.965 6.5278 1.3889 "{tailrecurse._crit_edge:\l|  %.tr.lcssa = phi i32 [ %0, %8 ], [ %220, %tailrecurse ]\l  %11 = icmp slt i32 %.tr.lcssa, %1\l  br \
i1 %11, label %.lr.ph297, label %._crit_edge\l|{<s0>T|<s1>F}}" filled record #3d50c3ff #d0473d70
node Node0xf54f550 11.264 65.479 9.2778 2.6389 "{tailrecurse:\l|  %.tr293 = phi i32 [ %220, %tailrecurse ], [ %0, %8 ]\l  %219 = add nsw i32 %.tr293, %1\l  %220 = sdiv i32 %219, \
2\l  tail call void @fft_twiddle_8(i32 noundef %.tr293, i32 noundef %220, ptr\l... noundef %2, ptr noundef %3, ptr noundef %4, i32 \
noundef %5, i32 noundef %6,\l... i32 noundef %7)\l  %221 = sub nsw i32 %1, %220\l  %222 = icmp slt i32 %221, 128\l  br i1 %222, \
label %tailrecurse._crit_edge, label %tailrecurse\l|{<s0>T|<s1>F}}" filled record #b70d28ff #b70d2870
node Node0xf547500 5 59.465 7.3333 4.6111 "{.lr.ph297:\l|  %12 = sext i32 %.tr.lcssa to i64\l  %13 = getelementptr inbounds %struct.COMPLEX, ptr %3, i64 %12\l  %14 = mul i32 %\
.tr.lcssa, %6\l  %15 = shl nsw i32 %7, 2\l  %16 = sext i32 %15 to i64\l  %17 = shl nsw i32 %7, 1\l  %18 = sext i32 %17 to i64\l  %\
19 = mul nsw i32 %7, 6\l  %20 = sext i32 %19 to i64\l  %21 = sext i32 %7 to i64\l  %22 = mul nsw i32 %7, 5\l  %23 = sext i32 %22 \
to i64\l  %24 = mul nsw i32 %7, 3\l  %25 = sext i32 %24 to i64\l  %26 = mul nsw i32 %7, 7\l  %27 = sext i32 %26 to i64\l  %28 = \
sext i32 %14 to i64\l  %29 = sext i32 %6 to i64\l  %wide.trip.count = sext i32 %1 to i64\l  br label %30\l}" filled record #3d50c3ff #d6524470
node Node0xf56b530 5.9722 3.4023 1.6111 0.65278 "{._crit_edge:\l|  ret void\l}" filled record #3d50c3ff #d0473d70
node Node0xf54fee0 4.5278 30.444 9.0556 52.431 "{30:\l|  %indvars.iv298 = phi i64 [ %12, %.lr.ph297 ], [ %indvars.iv.next299, %30 ]\l  %indvars.iv = phi i64 [ %28, %.lr.ph297 ], [ %\
indvars.iv.next, %30 ]\l  %.0285294 = phi ptr [ %13, %.lr.ph297 ], [ %218, %30 ]\l  %31 = getelementptr inbounds %struct.COMPLEX, \
ptr %2, i64 %indvars.iv298\l  %32 = trunc i64 %indvars.iv to i32\l  %33 = shl nsw i32 %32, 2\l  %34 = sext i32 %33 to i64\l  %35 = \
getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %34\l  %36 = getelementptr inbounds %struct.COMPLEX, ptr %31, i64 %16\l  %37 = \
load double, ptr %36, align 8\l  %38 = getelementptr inbounds %struct.COMPLEX, ptr %31, i64 %16, i32 1\l  %39 = load double, ptr %\
38, align 8\l  %40 = shl nsw i32 %32, 1\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %\
41\l  %43 = getelementptr inbounds %struct.COMPLEX, ptr %31, i64 %18\l  %44 = load double, ptr %43, align 8\l  %45 = getelementptr \
inbounds %struct.COMPLEX, ptr %31, i64 %18, i32 1\l  %46 = load double, ptr %45, align 8\l  %47 = mul nsw i64 %indvars.iv, 6\l  %\
48 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %47\l  %49 = getelementptr inbounds %struct.COMPLEX, ptr %31, i64 %20\l  %\
50 = load double, ptr %49, align 8\l  %51 = getelementptr inbounds %struct.COMPLEX, ptr %31, i64 %20, i32 1\l  %52 = load double, \
ptr %51, align 8\l  %53 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %indvars.iv\l  %54 = getelementptr inbounds %struct.COMPLEX, \
ptr %31, i64 %21\l  %55 = load double, ptr %54, align 8\l  %56 = getelementptr inbounds %struct.COMPLEX, ptr %31, i64 %21, i32 1\l  %\
57 = load double, ptr %56, align 8\l  %58 = mul nsw i64 %indvars.iv, 5\l  %59 = getelementptr inbounds %struct.COMPLEX, ptr %4, \
i64 %58\l  %60 = getelementptr inbounds %struct.COMPLEX, ptr %31, i64 %23\l  %61 = load double, ptr %60, align 8\l  %62 = getelementptr \
inbounds %struct.COMPLEX, ptr %31, i64 %23, i32 1\l  %63 = load double, ptr %62, align 8\l  %64 = mul nsw i64 %indvars.iv, 3\l  %\
65 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %64\l  %66 = getelementptr inbounds %struct.COMPLEX, ptr %31, i64 %25\l  %\
67 = load double, ptr %66, align 8\l  %68 = getelementptr inbounds %struct.COMPLEX, ptr %31, i64 %25, i32 1\l  %69 = load double, \
ptr %68, align 8\l  %70 = mul nsw i64 %indvars.iv, 7\l  %71 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %70\l  %72 = getelementptr \
inbounds %struct.COMPLEX, ptr %31, i64 %27\l  %73 = load double, ptr %72, align 8\l  %74 = getelementptr inbounds %struct.COMPLEX, \
ptr %31, i64 %27, i32 1\l  %75 = load double, ptr %74, align 8\l  %76 = getelementptr inbounds %struct.COMPLEX, ptr %.0285294, i64 %\
16\l  %77 = getelementptr inbounds %struct.COMPLEX, ptr %.0285294, i64 %21\l  %78 = getelementptr inbounds %struct.COMPLEX, ptr %\
.0285294, i64 %23\l  %79 = getelementptr inbounds %struct.COMPLEX, ptr %.0285294, i64 %18\l  %80 = getelementptr inbounds %struct.COMPLEX, \
ptr %.0285294, i64 %20\l  %81 = getelementptr inbounds %struct.COMPLEX, ptr %.0285294, i64 %25\l  %82 = getelementptr inbounds %\
struct.COMPLEX, ptr %.0285294, i64 %27\l  %83 = load \<2 x double\>, ptr %31, align 8\l  %84 = load \<2 x double\>, ptr %35, align \
8\l  %85 = insertelement \<2 x double\> poison, double %39, i64 0\l  %86 = shufflevector \<2 x double\> %85, \<2 x double\> poison, \<\
2 x i32\>\l... zeroinitializer\l  %87 = fneg \<2 x double\> %84\l  %88 = shufflevector \<2 x double\> %84, \<2 x double\> %87, \<\
2 x i32\> \<i32 0,\l... i32 3\>\l  %89 = fmul \<2 x double\> %86, %88\l  %90 = shufflevector \<2 x double\> %89, \<2 x double\> \
poison, \<2 x i32\> \<i32 1,\l... i32 0\>\l  %91 = insertelement \<2 x double\> poison, double %37, i64 0\l  %92 = shufflevector \<\
2 x double\> %91, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %93 = tail call \<2 x double\> @llvm.fmuladd.v2f64(\<\
2 x double\> %84, \<2 x\l... double\> %92, \<2 x double\> %90)\l  %94 = fsub \<2 x double\> %83, %93\l  %95 = load \<2 x double\>, \
ptr %42, align 8\l  %96 = shufflevector \<2 x double\> %95, \<2 x double\> poison, \<2 x i32\> \<i32 1,\l... i32 0\>\l  %97 = extractelement \<\
2 x double\> %95, i64 1\l  %98 = fneg double %97\l  %99 = insertelement \<2 x double\> poison, double %46, i64 0\l  %100 = shufflevector \<\
2 x double\> %99, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %101 = insertelement \<2 x double\> %95, double %98, \
i64 1\l  %102 = fmul \<2 x double\> %100, %101\l  %103 = insertelement \<2 x double\> poison, double %44, i64 0\l  %104 = shufflevector \<\
2 x double\> %103, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %105 = tail call \<2 x double\> @llvm.fmuladd.v2f64(\<\
2 x double\> %96, \<2 x\l... double\> %104, \<2 x double\> %102)\l  %106 = load \<2 x double\>, ptr %48, align 8\l  %107 = shufflevector \<\
2 x double\> %106, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %108 = extractelement \<2 x double\> %106, i64 1\l  %\
109 = fneg double %108\l  %110 = insertelement \<2 x double\> poison, double %52, i64 0\l  %111 = shufflevector \<2 x double\> %\
110, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %112 = insertelement \<2 x double\> %106, double %109, i64 1\l  %\
113 = fmul \<2 x double\> %111, %112\l  %114 = insertelement \<2 x double\> poison, double %50, i64 0\l  %115 = shufflevector \<\
2 x double\> %114, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %116 = tail call \<2 x double\> @llvm.fmuladd.v2f64(\<\
2 x double\> %107, \<2 x\l... double\> %115, \<2 x double\> %113)\l  %117 = fsub \<2 x double\> %105, %116\l  %118 = fsub \<2 x \
double\> %94, %117\l  %119 = fadd \<2 x double\> %94, %117\l  %120 = shufflevector \<2 x double\> %118, \<2 x double\> %119, \<2 \
x i32\> \<i32 0,\l... i32 3\>\l  %121 = load \<2 x double\>, ptr %53, align 8\l  %122 = shufflevector \<2 x double\> %121, \<2 x \
double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %123 = extractelement \<2 x double\> %121, i64 1\l  %124 = fneg double %123\l  %\
125 = insertelement \<2 x double\> poison, double %57, i64 0\l  %126 = shufflevector \<2 x double\> %125, \<2 x double\> poison, \<\
2 x i32\>\l... zeroinitializer\l  %127 = insertelement \<2 x double\> %121, double %124, i64 1\l  %128 = fmul \<2 x double\> %126, %\
127\l  %129 = insertelement \<2 x double\> poison, double %55, i64 0\l  %130 = shufflevector \<2 x double\> %129, \<2 x double\> \
poison, \<2 x i32\>\l... zeroinitializer\l  %131 = tail call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %122, \<2 x\l... \
double\> %130, \<2 x double\> %128)\l  %132 = load \<2 x double\>, ptr %59, align 8\l  %133 = shufflevector \<2 x double\> %132, \<\
2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %134 = extractelement \<2 x double\> %132, i64 1\l  %135 = fneg double %\
134\l  %136 = insertelement \<2 x double\> poison, double %63, i64 0\l  %137 = shufflevector \<2 x double\> %136, \<2 x double\> \
poison, \<2 x i32\>\l... zeroinitializer\l  %138 = insertelement \<2 x double\> %132, double %135, i64 1\l  %139 = fmul \<2 x double\> %\
137, %138\l  %140 = insertelement \<2 x double\> poison, double %61, i64 0\l  %141 = shufflevector \<2 x double\> %140, \<2 x double\> \
poison, \<2 x i32\>\l... zeroinitializer\l  %142 = tail call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %133, \<2 x\l... \
double\> %141, \<2 x double\> %139)\l  %143 = fadd \<2 x double\> %131, %142\l  %144 = load \<2 x double\>, ptr %65, align 8\l  %\
145 = shufflevector \<2 x double\> %144, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %146 = extractelement \<2 x \
double\> %144, i64 1\l  %147 = fneg double %146\l  %148 = insertelement \<2 x double\> poison, double %69, i64 0\l  %149 = shufflevector \<\
2 x double\> %148, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %150 = insertelement \<2 x double\> %144, double %\
147, i64 1\l  %151 = fmul \<2 x double\> %149, %150\l  %152 = insertelement \<2 x double\> poison, double %67, i64 0\l  %153 = shufflevector \<\
2 x double\> %152, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %154 = tail call \<2 x double\> @llvm.fmuladd.v2f64(\<\
2 x double\> %145, \<2 x\l... double\> %153, \<2 x double\> %151)\l  %155 = load \<2 x double\>, ptr %71, align 8\l  %156 = shufflevector \<\
2 x double\> %155, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %157 = extractelement \<2 x double\> %155, i64 1\l  %\
158 = fneg double %157\l  %159 = insertelement \<2 x double\> poison, double %75, i64 0\l  %160 = shufflevector \<2 x double\> %\
159, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %161 = insertelement \<2 x double\> %155, double %158, i64 1\l  %\
162 = fmul \<2 x double\> %160, %161\l  %163 = insertelement \<2 x double\> poison, double %73, i64 0\l  %164 = shufflevector \<\
2 x double\> %163, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %165 = tail call \<2 x double\> @llvm.fmuladd.v2f64(\<\
2 x double\> %156, \<2 x\l... double\> %164, \<2 x double\> %162)\l  %166 = fadd \<2 x double\> %154, %165\l  %167 = shufflevector \<\
2 x double\> %131, \<2 x double\> %154, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %168 = shufflevector \<2 x double\> %142, \<2 x double\> %\
165, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %169 = fsub \<2 x double\> %167, %168\l  %170 = shufflevector \<2 x double\> %131, \<2 \
x double\> %154, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %171 = shufflevector \<2 x double\> %142, \<2 x double\> %165, \<2 x i32\> \<\
i32 1,\l... i32 2\>\l  %172 = fsub \<2 x double\> %170, %171\l  %173 = fsub \<2 x double\> %143, %166\l  %174 = extractelement \<\
2 x double\> %172, i64 0\l  %175 = extractelement \<2 x double\> %172, i64 1\l  %176 = fadd double %174, %175\l  %177 = extractelement \<\
2 x double\> %169, i64 0\l  %178 = extractelement \<2 x double\> %169, i64 1\l  %179 = fsub double %177, %178\l  %180 = fsub double %\
174, %175\l  %181 = fadd double %177, %178\l  %182 = fadd \<2 x double\> %83, %93\l  %183 = fadd \<2 x double\> %105, %116\l  %184 = \
shufflevector \<2 x double\> %183, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %185 = fsub \<2 x double\> %182, %\
184\l  %186 = fadd \<2 x double\> %143, %166\l  %187 = shufflevector \<2 x double\> %186, \<2 x double\> poison, \<2 x i32\> \<i32\l... \
1, i32 0\>\l  %188 = fadd \<2 x double\> %182, %184\l  %189 = fadd \<2 x double\> %188, %187\l  store \<2 x double\> %189, ptr %\
.0285294, align 8\l  %190 = fsub \<2 x double\> %188, %187\l  store \<2 x double\> %190, ptr %76, align 8\l  %191 = shufflevector \<\
2 x double\> %119, \<2 x double\> %118, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %192 = insertelement \<2 x double\> poison, double %\
179, i64 0\l  %193 = insertelement \<2 x double\> poison, double %179, i64 0\l  %194 = insertelement \<2 x double\> poison, double %\
176, i64 0\l  %195 = insertelement \<2 x double\> poison, double %176, i64 0\l  %196 = fadd \<2 x double\> %193, %195\l  %197 = \
fsub \<2 x double\> %192, %194\l  %198 = shufflevector \<2 x double\> %196, \<2 x double\> %197, \<2 x i32\> \<i32 0,\l... i32 2\>\l  %\
199 = fmul \<2 x double\> %198, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %200 = fadd \<2 x double\> %191, %\
199\l  store \<2 x double\> %200, ptr %77, align 8\l  %201 = fsub \<2 x double\> %191, %199\l  store \<2 x double\> %201, ptr %78, \
align 8\l  %202 = fadd \<2 x double\> %185, %173\l  %203 = fsub \<2 x double\> %185, %173\l  %204 = shufflevector \<2 x double\> %\
202, \<2 x double\> %203, \<2 x i32\> \<i32 0,\l... i32 3\>\l  store \<2 x double\> %204, ptr %79, align 8\l  %205 = shufflevector \<\
2 x double\> %203, \<2 x double\> %202, \<2 x i32\> \<i32 0,\l... i32 3\>\l  store \<2 x double\> %205, ptr %80, align 8\l  %206 = \
insertelement \<2 x double\> poison, double %181, i64 0\l  %207 = insertelement \<2 x double\> poison, double %181, i64 0\l  %208 = \
insertelement \<2 x double\> poison, double %180, i64 0\l  %209 = insertelement \<2 x double\> poison, double %180, i64 0\l  %210 = \
fsub \<2 x double\> %207, %209\l  %211 = fadd \<2 x double\> %206, %208\l  %212 = shufflevector \<2 x double\> %210, \<2 x double\> %\
211, \<2 x i32\> \<i32 0,\l... i32 2\>\l  %213 = fmul \<2 x double\> %212, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %\
214 = fadd \<2 x double\> %120, %213\l  %215 = fsub \<2 x double\> %120, %213\l  %216 = shufflevector \<2 x double\> %214, \<2 x \
double\> %215, \<2 x i32\> \<i32 0,\l... i32 3\>\l  store \<2 x double\> %216, ptr %81, align 8\l  %217 = shufflevector \<2 x double\> %\
215, \<2 x double\> %214, \<2 x i32\> \<i32 0,\l... i32 3\>\l  store \<2 x double\> %217, ptr %82, align 8\l  %indvars.iv.next299 = \
add nsw i64 %indvars.iv298, 1\l  %indvars.iv.next = add i64 %indvars.iv, %29\l  %218 = getelementptr inbounds %struct.COMPLEX, ptr %\
.0285294, i64 1\l  %exitcond.not = icmp eq i64 %indvars.iv.next299, %wide.trip.count\l  br i1 %exitcond.not, label %._crit_edge, \
label %30, !llvm.loop !4\l|{<s0>T|<s1>F}}" filled record #b70d28ff #b70d2870
edge Node0xf5a7880 Node0xf54f500 10 6.9444 67.298 6.9444 67.001 6.6057 67.076 6.5 66.798 6.0832 65.702 6.0745 65.252 6.5 64.159 6.5541 64.02 6.633 63.888 6.724 63.765 solid black
edge Node0xf5a7880 Node0xf54f550 4 10.556 67.298 10.556 67.176 10.57 67.052 10.594 66.929 solid black
edge Node0xf54f500 Node0xf547500 4 5.9444 62.27 5.9444 62.15 5.9364 62.027 5.9218 61.905 solid black
edge Node0xf54f500 Node0xf56b530 7 9.2222 62.27 9.2222 36.474 25.45 24.448 9.4306 4.2287 9.1224 3.8398 7.8356 3.6188 6.922 3.5083 solid black
edge Node0xf54f550 Node0xf54f500 4 6.6111 64.326 6.4473 64.326 6.6202 64.061 6.8632 63.766 solid black
edge Node0xf54f550 Node0xf54f550 7 14.028 64.166 15.383 63.712 16.153 63.815 16.153 64.902 16.153 65.055 16.1 65.188 16.005 65.303 solid black
edge Node0xf547500 Node0xf54fee0 4 4.9627 57.164 4.9608 57.045 4.9588 56.922 4.9567 56.795 solid black
edge Node0xf54fee0 Node0xf56b530 4 2.2639 4.2287 2.2639 3.665 3.9198 3.4919 5.0186 3.439 solid black
edge Node0xf54fee0 Node0xf54fee0 7 6.8289 4.2313 8.3986 -2.3673 9.3056 -2.2139 9.3056 17.416 9.3056 20.69 9.2183 23.422 9.0655 25.672 solid black
stop
