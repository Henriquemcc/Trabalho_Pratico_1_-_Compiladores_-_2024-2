graph 1 19.306 125.19
node Node0x295a1790 13.431 124.86 2.6389 0.65278 "{8:\l|  br label %tailrecurse\l}" filled record #3d50c3ff #d6524470
node Node0x295fa420 13.431 123.23 4.9306 1.5972 "{tailrecurse:\l|  %.tr = phi i32 [ %0, %8 ], [ %469, %467 ]\l  %9 = sub nsw i32 %1, %.tr\l  %10 = icmp slt i32 %9, 128\l  br i1 %\
10, label %11, label %467\l|{<s0>T|<s1>F}}" filled record #b70d28ff #b70d2870
node Node0x2960f9f0 7.1944 121.09 5.1528 1.1806 "{11:\l|  %12 = icmp slt i32 %.tr, %1\l  br i1 %12, label %.lr.ph, label %.loopexit\l|{<s0>T|<s1>F}}" filled record #3d50c3ff #d6524470
node Node0x2960fa40 14.667 121.09 9.2778 1.6944 "{467:\l|  %468 = add nsw i32 %1, %.tr\l  %469 = sdiv i32 %468, 2\l  tail call void @fft_twiddle_16(i32 noundef %.tr, i32 noundef %\
469, ptr\l... noundef %2, ptr noundef %3, ptr noundef %4, i32 noundef %5, i32 noundef %6,\l... i32 noundef %7)\l  br label %tailrecurse\l}" filled record #b70d28ff #b70d2870
node Node0x29729260 5.1667 115.77 7.3333 7.9444 "{.lr.ph:\l|  %13 = sext i32 %.tr to i64\l  %14 = getelementptr inbounds %struct.COMPLEX, ptr %3, i64 %13\l  %15 = mul i32 %6, %.tr\l  %\
16 = shl nsw i32 %7, 3\l  %17 = sext i32 %16 to i64\l  %18 = shl nsw i32 %7, 2\l  %19 = sext i32 %18 to i64\l  %20 = mul nsw i32 %\
7, 12\l  %21 = sext i32 %20 to i64\l  %22 = shl nsw i32 %7, 1\l  %23 = sext i32 %22 to i64\l  %24 = mul nsw i32 %7, 10\l  %25 = \
sext i32 %24 to i64\l  %26 = mul nsw i32 %7, 6\l  %27 = sext i32 %26 to i64\l  %28 = mul nsw i32 %7, 14\l  %29 = sext i32 %28 to \
i64\l  %30 = sext i32 %7 to i64\l  %31 = mul nsw i32 %7, 9\l  %32 = sext i32 %31 to i64\l  %33 = mul nsw i32 %7, 5\l  %34 = sext \
i32 %33 to i64\l  %35 = mul nsw i32 %7, 13\l  %36 = sext i32 %35 to i64\l  %37 = mul nsw i32 %7, 3\l  %38 = sext i32 %37 to i64\l  %\
39 = mul nsw i32 %7, 11\l  %40 = sext i32 %39 to i64\l  %41 = mul nsw i32 %7, 7\l  %42 = sext i32 %41 to i64\l  %43 = mul nsw i32 %\
7, 15\l  %44 = sext i32 %43 to i64\l  %45 = sext i32 %15 to i64\l  %46 = sext i32 %6 to i64\l  %wide.trip.count = sext i32 %1 to \
i64\l  br label %47\l}" filled record #3d50c3ff #dc5d4a70
node Node0x2964e400 6.0417 7.2061 1.375 0.65278 "{.loopexit:\l|  ret void\l}" filled record #3d50c3ff #d6524470
node Node0x296103d0 4.5833 59.664 9.1667 103.26 "{47:\l|  %indvars.iv641 = phi i64 [ %13, %.lr.ph ], [ %indvars.iv.next642, %47 ]\l  %indvars.iv = phi i64 [ %45, %.lr.ph ], [ %indvars.iv.next, %\
47 ]\l  %.0637638 = phi ptr [ %14, %.lr.ph ], [ %466, %47 ]\l  %48 = getelementptr inbounds %struct.COMPLEX, ptr %2, i64 %indvars.iv641\l  %\
49 = load double, ptr %48, align 8\l  %50 = getelementptr inbounds %struct.COMPLEX, ptr %2, i64 %indvars.iv641,\l... i32 1\l  %51 = \
load double, ptr %50, align 8\l  %52 = trunc i64 %indvars.iv to i32\l  %53 = shl nsw i32 %52, 3\l  %54 = sext i32 %53 to i64\l  %\
55 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %54\l  %56 = load double, ptr %55, align 8\l  %57 = getelementptr inbounds %\
struct.COMPLEX, ptr %4, i64 %54, i32 1\l  %58 = load double, ptr %57, align 8\l  %59 = getelementptr inbounds %struct.COMPLEX, ptr %\
48, i64 %17\l  %60 = load double, ptr %59, align 8\l  %61 = getelementptr inbounds %struct.COMPLEX, ptr %48, i64 %17, i32 1\l  %\
62 = load double, ptr %61, align 8\l  %63 = fneg double %58\l  %64 = fmul double %62, %63\l  %65 = tail call double @llvm.fmuladd.f64(\
double %56, double %60, double %64)\l  %66 = fmul double %56, %62\l  %67 = tail call double @llvm.fmuladd.f64(double %58, double %\
60, double %66)\l  %68 = fadd double %49, %65\l  %69 = fadd double %51, %67\l  %70 = fsub double %49, %65\l  %71 = fsub double %\
51, %67\l  %72 = trunc i64 %indvars.iv to i32\l  %73 = shl nsw i32 %72, 2\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds %\
struct.COMPLEX, ptr %4, i64 %74\l  %76 = load double, ptr %75, align 8\l  %77 = getelementptr inbounds %struct.COMPLEX, ptr %4, \
i64 %74, i32 1\l  %78 = load double, ptr %77, align 8\l  %79 = getelementptr inbounds %struct.COMPLEX, ptr %48, i64 %19\l  %80 = \
load double, ptr %79, align 8\l  %81 = getelementptr inbounds %struct.COMPLEX, ptr %48, i64 %19, i32 1\l  %82 = load double, ptr %\
81, align 8\l  %83 = fneg double %78\l  %84 = fmul double %82, %83\l  %85 = tail call double @llvm.fmuladd.f64(double %76, double %\
80, double %84)\l  %86 = fmul double %76, %82\l  %87 = tail call double @llvm.fmuladd.f64(double %78, double %80, double %86)\l  %\
88 = mul nsw i64 %indvars.iv, 12\l  %89 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %88\l  %90 = load double, ptr %89, \
align 8\l  %91 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %88, i32 1\l  %92 = load double, ptr %91, align 8\l  %93 = \
getelementptr inbounds %struct.COMPLEX, ptr %48, i64 %21\l  %94 = load double, ptr %93, align 8\l  %95 = getelementptr inbounds %\
struct.COMPLEX, ptr %48, i64 %21, i32 1\l  %96 = load double, ptr %95, align 8\l  %97 = fneg double %92\l  %98 = fmul double %96, %\
97\l  %99 = tail call double @llvm.fmuladd.f64(double %90, double %94, double %98)\l  %100 = fmul double %90, %96\l  %101 = tail \
call double @llvm.fmuladd.f64(double %92, double %94, double\l... %100)\l  %102 = fadd double %85, %99\l  %103 = fadd double %87, %\
101\l  %104 = fsub double %85, %99\l  %105 = fsub double %87, %101\l  %106 = fadd double %68, %102\l  %107 = fadd double %69, %103\l  %\
108 = fsub double %68, %102\l  %109 = fsub double %69, %103\l  %110 = fadd double %70, %105\l  %111 = fsub double %71, %104\l  %\
112 = fsub double %70, %105\l  %113 = fadd double %71, %104\l  %114 = trunc i64 %indvars.iv to i32\l  %115 = shl nsw i32 %114, 1\l  %\
116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %116\l  %118 = load double, ptr %117, align \
8\l  %119 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %116, i32 1\l  %120 = load double, ptr %119, align 8\l  %121 = getelementptr \
inbounds %struct.COMPLEX, ptr %48, i64 %23\l  %122 = load double, ptr %121, align 8\l  %123 = getelementptr inbounds %struct.COMPLEX, \
ptr %48, i64 %23, i32 1\l  %124 = load double, ptr %123, align 8\l  %125 = fneg double %120\l  %126 = fmul double %124, %125\l  %\
127 = tail call double @llvm.fmuladd.f64(double %118, double %122, double\l... %126)\l  %128 = fmul double %118, %124\l  %129 = \
tail call double @llvm.fmuladd.f64(double %120, double %122, double\l... %128)\l  %130 = mul nsw i64 %indvars.iv, 10\l  %131 = getelementptr \
inbounds %struct.COMPLEX, ptr %4, i64 %130\l  %132 = load double, ptr %131, align 8\l  %133 = getelementptr inbounds %struct.COMPLEX, \
ptr %4, i64 %130, i32 1\l  %134 = load double, ptr %133, align 8\l  %135 = getelementptr inbounds %struct.COMPLEX, ptr %48, i64 %\
25\l  %136 = load double, ptr %135, align 8\l  %137 = getelementptr inbounds %struct.COMPLEX, ptr %48, i64 %25, i32 1\l  %138 = \
load double, ptr %137, align 8\l  %139 = fneg double %134\l  %140 = fmul double %138, %139\l  %141 = tail call double @llvm.fmuladd.f64(\
double %132, double %136, double\l... %140)\l  %142 = fmul double %132, %138\l  %143 = tail call double @llvm.fmuladd.f64(double %\
134, double %136, double\l... %142)\l  %144 = fadd double %127, %141\l  %145 = fadd double %129, %143\l  %146 = fsub double %127, %\
141\l  %147 = fsub double %129, %143\l  %148 = mul nsw i64 %indvars.iv, 6\l  %149 = getelementptr inbounds %struct.COMPLEX, ptr %\
4, i64 %148\l  %150 = load double, ptr %149, align 8\l  %151 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %148, i32 1\l  %\
152 = load double, ptr %151, align 8\l  %153 = getelementptr inbounds %struct.COMPLEX, ptr %48, i64 %27\l  %154 = load double, ptr %\
153, align 8\l  %155 = getelementptr inbounds %struct.COMPLEX, ptr %48, i64 %27, i32 1\l  %156 = load double, ptr %155, align 8\l  %\
157 = fneg double %152\l  %158 = fmul double %156, %157\l  %159 = tail call double @llvm.fmuladd.f64(double %150, double %154, double\l... %\
158)\l  %160 = fmul double %150, %156\l  %161 = tail call double @llvm.fmuladd.f64(double %152, double %154, double\l... %160)\l  %\
162 = mul nsw i64 %indvars.iv, 14\l  %163 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %162\l  %164 = load double, ptr %\
163, align 8\l  %165 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %162, i32 1\l  %166 = load double, ptr %165, align 8\l  %\
167 = getelementptr inbounds %struct.COMPLEX, ptr %48, i64 %29\l  %168 = load double, ptr %167, align 8\l  %169 = getelementptr \
inbounds %struct.COMPLEX, ptr %48, i64 %29, i32 1\l  %170 = load double, ptr %169, align 8\l  %171 = fneg double %166\l  %172 = \
fmul double %170, %171\l  %173 = tail call double @llvm.fmuladd.f64(double %164, double %168, double\l... %172)\l  %174 = fmul double %\
164, %170\l  %175 = tail call double @llvm.fmuladd.f64(double %166, double %168, double\l... %174)\l  %176 = fadd double %159, %\
173\l  %177 = fadd double %161, %175\l  %178 = fsub double %159, %173\l  %179 = fsub double %161, %175\l  %180 = fadd double %144, %\
176\l  %181 = fadd double %145, %177\l  %182 = fsub double %144, %176\l  %183 = fsub double %145, %177\l  %184 = fadd double %146, %\
179\l  %185 = fsub double %147, %178\l  %186 = fsub double %146, %179\l  %187 = fadd double %147, %178\l  %188 = fadd double %106, %\
180\l  %189 = fadd double %107, %181\l  %190 = fsub double %106, %180\l  %191 = fsub double %107, %181\l  %192 = fadd double %184, %\
185\l  %193 = fmul double %192, 0x3FE6A09E667F4BB8\l  %194 = fsub double %185, %184\l  %195 = fmul double %194, 0x3FE6A09E667F4BB8\l  %\
196 = fadd double %110, %193\l  %197 = fadd double %111, %195\l  %198 = fsub double %110, %193\l  %199 = fsub double %111, %195\l  %\
200 = fadd double %108, %183\l  %201 = fsub double %109, %182\l  %202 = fsub double %108, %183\l  %203 = fadd double %109, %182\l  %\
204 = fsub double %187, %186\l  %205 = fmul double %204, 0x3FE6A09E667F4BB8\l  %206 = fadd double %186, %187\l  %207 = fmul double %\
206, 0x3FE6A09E667F4BB8\l  %208 = fadd double %112, %205\l  %209 = fsub double %113, %207\l  %210 = fsub double %112, %205\l  %211 = \
fadd double %113, %207\l  %212 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %indvars.iv\l  %213 = load double, ptr %212, \
align 8\l  %214 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %indvars.iv, i32 1\l  %215 = load double, ptr %214, align \
8\l  %216 = getelementptr inbounds %struct.COMPLEX, ptr %48, i64 %30\l  %217 = load double, ptr %216, align 8\l  %218 = getelementptr \
inbounds %struct.COMPLEX, ptr %48, i64 %30, i32 1\l  %219 = load double, ptr %218, align 8\l  %220 = fneg double %215\l  %221 = \
fmul double %219, %220\l  %222 = tail call double @llvm.fmuladd.f64(double %213, double %217, double\l... %221)\l  %223 = fmul double %\
213, %219\l  %224 = tail call double @llvm.fmuladd.f64(double %215, double %217, double\l... %223)\l  %225 = mul nsw i64 %indvars.iv, \
9\l  %226 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %225\l  %227 = load double, ptr %226, align 8\l  %228 = getelementptr \
inbounds %struct.COMPLEX, ptr %4, i64 %225, i32 1\l  %229 = load double, ptr %228, align 8\l  %230 = getelementptr inbounds %struct.COMPLEX, \
ptr %48, i64 %32\l  %231 = load double, ptr %230, align 8\l  %232 = getelementptr inbounds %struct.COMPLEX, ptr %48, i64 %32, i32 \
1\l  %233 = load double, ptr %232, align 8\l  %234 = fneg double %229\l  %235 = fmul double %233, %234\l  %236 = tail call double @\
llvm.fmuladd.f64(double %227, double %231, double\l... %235)\l  %237 = fmul double %227, %233\l  %238 = tail call double @llvm.fmuladd.f64(\
double %229, double %231, double\l... %237)\l  %239 = fadd double %222, %236\l  %240 = fadd double %224, %238\l  %241 = fsub double %\
222, %236\l  %242 = fsub double %224, %238\l  %243 = mul nsw i64 %indvars.iv, 5\l  %244 = getelementptr inbounds %struct.COMPLEX, \
ptr %4, i64 %243\l  %245 = load double, ptr %244, align 8\l  %246 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %243, i32 \
1\l  %247 = load double, ptr %246, align 8\l  %248 = getelementptr inbounds %struct.COMPLEX, ptr %48, i64 %34\l  %249 = load double, \
ptr %248, align 8\l  %250 = getelementptr inbounds %struct.COMPLEX, ptr %48, i64 %34, i32 1\l  %251 = load double, ptr %250, align \
8\l  %252 = fneg double %247\l  %253 = fmul double %251, %252\l  %254 = tail call double @llvm.fmuladd.f64(double %245, double %\
249, double\l... %253)\l  %255 = fmul double %245, %251\l  %256 = tail call double @llvm.fmuladd.f64(double %247, double %249, double\l... %\
255)\l  %257 = mul nsw i64 %indvars.iv, 13\l  %258 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %257\l  %259 = load double, \
ptr %258, align 8\l  %260 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %257, i32 1\l  %261 = load double, ptr %260, align \
8\l  %262 = getelementptr inbounds %struct.COMPLEX, ptr %48, i64 %36\l  %263 = load double, ptr %262, align 8\l  %264 = getelementptr \
inbounds %struct.COMPLEX, ptr %48, i64 %36, i32 1\l  %265 = load double, ptr %264, align 8\l  %266 = fneg double %261\l  %267 = \
fmul double %265, %266\l  %268 = tail call double @llvm.fmuladd.f64(double %259, double %263, double\l... %267)\l  %269 = fmul double %\
259, %265\l  %270 = tail call double @llvm.fmuladd.f64(double %261, double %263, double\l... %269)\l  %271 = fadd double %254, %\
268\l  %272 = fadd double %256, %270\l  %273 = fsub double %254, %268\l  %274 = fsub double %256, %270\l  %275 = fadd double %239, %\
271\l  %276 = fadd double %240, %272\l  %277 = fsub double %239, %271\l  %278 = fsub double %240, %272\l  %279 = fadd double %241, %\
274\l  %280 = fsub double %242, %273\l  %281 = fsub double %241, %274\l  %282 = fadd double %242, %273\l  %283 = mul nsw i64 %indvars.iv, \
3\l  %284 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %283\l  %285 = load double, ptr %284, align 8\l  %286 = getelementptr \
inbounds %struct.COMPLEX, ptr %4, i64 %283, i32 1\l  %287 = load double, ptr %286, align 8\l  %288 = getelementptr inbounds %struct.COMPLEX, \
ptr %48, i64 %38\l  %289 = load double, ptr %288, align 8\l  %290 = getelementptr inbounds %struct.COMPLEX, ptr %48, i64 %38, i32 \
1\l  %291 = load double, ptr %290, align 8\l  %292 = fneg double %287\l  %293 = fmul double %291, %292\l  %294 = tail call double @\
llvm.fmuladd.f64(double %285, double %289, double\l... %293)\l  %295 = fmul double %285, %291\l  %296 = tail call double @llvm.fmuladd.f64(\
double %287, double %289, double\l... %295)\l  %297 = mul nsw i64 %indvars.iv, 11\l  %298 = getelementptr inbounds %struct.COMPLEX, \
ptr %4, i64 %297\l  %299 = load double, ptr %298, align 8\l  %300 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %297, i32 \
1\l  %301 = load double, ptr %300, align 8\l  %302 = getelementptr inbounds %struct.COMPLEX, ptr %48, i64 %40\l  %303 = load double, \
ptr %302, align 8\l  %304 = getelementptr inbounds %struct.COMPLEX, ptr %48, i64 %40, i32 1\l  %305 = load double, ptr %304, align \
8\l  %306 = fneg double %301\l  %307 = fmul double %305, %306\l  %308 = tail call double @llvm.fmuladd.f64(double %299, double %\
303, double\l... %307)\l  %309 = fmul double %299, %305\l  %310 = tail call double @llvm.fmuladd.f64(double %301, double %303, double\l... %\
309)\l  %311 = fadd double %294, %308\l  %312 = fadd double %296, %310\l  %313 = fsub double %294, %308\l  %314 = fsub double %296, %\
310\l  %315 = mul nsw i64 %indvars.iv, 7\l  %316 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %315\l  %317 = load double, \
ptr %316, align 8\l  %318 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %315, i32 1\l  %319 = load double, ptr %318, align \
8\l  %320 = getelementptr inbounds %struct.COMPLEX, ptr %48, i64 %42\l  %321 = load double, ptr %320, align 8\l  %322 = getelementptr \
inbounds %struct.COMPLEX, ptr %48, i64 %42, i32 1\l  %323 = load double, ptr %322, align 8\l  %324 = fneg double %319\l  %325 = \
fmul double %323, %324\l  %326 = tail call double @llvm.fmuladd.f64(double %317, double %321, double\l... %325)\l  %327 = fmul double %\
317, %323\l  %328 = tail call double @llvm.fmuladd.f64(double %319, double %321, double\l... %327)\l  %329 = mul nsw i64 %indvars.iv, \
15\l  %330 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %329\l  %331 = load double, ptr %330, align 8\l  %332 = getelementptr \
inbounds %struct.COMPLEX, ptr %4, i64 %329, i32 1\l  %333 = load double, ptr %332, align 8\l  %334 = getelementptr inbounds %struct.COMPLEX, \
ptr %48, i64 %44\l  %335 = load double, ptr %334, align 8\l  %336 = getelementptr inbounds %struct.COMPLEX, ptr %48, i64 %44, i32 \
1\l  %337 = load double, ptr %336, align 8\l  %338 = fneg double %333\l  %339 = fmul double %337, %338\l  %340 = tail call double @\
llvm.fmuladd.f64(double %331, double %335, double\l... %339)\l  %341 = fmul double %331, %337\l  %342 = tail call double @llvm.fmuladd.f64(\
double %333, double %335, double\l... %341)\l  %343 = fadd double %326, %340\l  %344 = fadd double %328, %342\l  %345 = fsub double %\
326, %340\l  %346 = fsub double %328, %342\l  %347 = fadd double %311, %343\l  %348 = fadd double %312, %344\l  %349 = fsub double %\
311, %343\l  %350 = fsub double %312, %344\l  %351 = fadd double %313, %346\l  %352 = fsub double %314, %345\l  %353 = fsub double %\
313, %346\l  %354 = fadd double %314, %345\l  %355 = fadd double %275, %347\l  %356 = fadd double %276, %348\l  %357 = fsub double %\
275, %347\l  %358 = fsub double %276, %348\l  %359 = fadd double %351, %352\l  %360 = fmul double %359, 0x3FE6A09E667F4BB8\l  %361 = \
fsub double %352, %351\l  %362 = fmul double %361, 0x3FE6A09E667F4BB8\l  %363 = fadd double %279, %360\l  %364 = fadd double %280, %\
362\l  %365 = fsub double %279, %360\l  %366 = fsub double %280, %362\l  %367 = fadd double %277, %350\l  %368 = fsub double %278, %\
349\l  %369 = fsub double %277, %350\l  %370 = fadd double %278, %349\l  %371 = fsub double %354, %353\l  %372 = fmul double %371, \
0x3FE6A09E667F4BB8\l  %373 = fadd double %353, %354\l  %374 = fmul double %373, 0x3FE6A09E667F4BB8\l  %375 = fadd double %281, %\
372\l  %376 = fsub double %282, %374\l  %377 = fsub double %281, %372\l  %378 = fadd double %282, %374\l  %379 = fadd double %188, %\
355\l  store double %379, ptr %.0637638, align 8\l  %380 = fadd double %189, %356\l  %381 = getelementptr inbounds %struct.COMPLEX, \
ptr %.0637638, i64 0, i32 1\l  store double %380, ptr %381, align 8\l  %382 = fsub double %188, %355\l  %383 = getelementptr inbounds %\
struct.COMPLEX, ptr %.0637638, i64 %17\l  store double %382, ptr %383, align 8\l  %384 = fsub double %189, %356\l  %385 = getelementptr \
inbounds %struct.COMPLEX, ptr %.0637638, i64 %17, i32 1\l  store double %384, ptr %385, align 8\l  %386 = fmul double %364, 0x3FD87DE2A6AEA312\l  %\
387 = tail call double @llvm.fmuladd.f64(double %363, double\l... 0x3FED906BCF32832F, double %386)\l  %388 = fmul double %363, 0xBFD87DE2A6AEA312\l  %\
389 = tail call double @llvm.fmuladd.f64(double %364, double\l... 0x3FED906BCF32832F, double %388)\l  %390 = fadd double %196, %\
387\l  %391 = getelementptr inbounds %struct.COMPLEX, ptr %.0637638, i64 %30\l  store double %390, ptr %391, align 8\l  %392 = fadd \
double %197, %389\l  %393 = getelementptr inbounds %struct.COMPLEX, ptr %.0637638, i64 %30, i32 1\l  store double %392, ptr %393, \
align 8\l  %394 = fsub double %196, %387\l  %395 = getelementptr inbounds %struct.COMPLEX, ptr %.0637638, i64 %32\l  store double %\
394, ptr %395, align 8\l  %396 = fsub double %197, %389\l  %397 = getelementptr inbounds %struct.COMPLEX, ptr %.0637638, i64 %32, \
i32 1\l  store double %396, ptr %397, align 8\l  %398 = fadd double %367, %368\l  %399 = fmul double %398, 0x3FE6A09E667F4BB8\l  %\
400 = fsub double %368, %367\l  %401 = fmul double %400, 0x3FE6A09E667F4BB8\l  %402 = fadd double %200, %399\l  %403 = getelementptr \
inbounds %struct.COMPLEX, ptr %.0637638, i64 %23\l  store double %402, ptr %403, align 8\l  %404 = fadd double %201, %401\l  %405 = \
getelementptr inbounds %struct.COMPLEX, ptr %.0637638, i64 %23, i32 1\l  store double %404, ptr %405, align 8\l  %406 = fsub double %\
200, %399\l  %407 = getelementptr inbounds %struct.COMPLEX, ptr %.0637638, i64 %25\l  store double %406, ptr %407, align 8\l  %408 = \
fsub double %201, %401\l  %409 = getelementptr inbounds %struct.COMPLEX, ptr %.0637638, i64 %25, i32 1\l  store double %408, ptr %\
409, align 8\l  %410 = fmul double %376, 0x3FED906BCF32832F\l  %411 = tail call double @llvm.fmuladd.f64(double %375, double\l... \
0x3FD87DE2A6AEA312, double %410)\l  %412 = fmul double %375, 0xBFED906BCF32832F\l  %413 = tail call double @llvm.fmuladd.f64(double %\
376, double\l... 0x3FD87DE2A6AEA312, double %412)\l  %414 = fadd double %208, %411\l  %415 = getelementptr inbounds %struct.COMPLEX, \
ptr %.0637638, i64 %38\l  store double %414, ptr %415, align 8\l  %416 = fadd double %209, %413\l  %417 = getelementptr inbounds %\
struct.COMPLEX, ptr %.0637638, i64 %38, i32 1\l  store double %416, ptr %417, align 8\l  %418 = fsub double %208, %411\l  %419 = \
getelementptr inbounds %struct.COMPLEX, ptr %.0637638, i64 %40\l  store double %418, ptr %419, align 8\l  %420 = fsub double %209, %\
413\l  %421 = getelementptr inbounds %struct.COMPLEX, ptr %.0637638, i64 %40, i32 1\l  store double %420, ptr %421, align 8\l  %\
422 = fadd double %190, %358\l  %423 = getelementptr inbounds %struct.COMPLEX, ptr %.0637638, i64 %19\l  store double %422, ptr %\
423, align 8\l  %424 = fsub double %191, %357\l  %425 = getelementptr inbounds %struct.COMPLEX, ptr %.0637638, i64 %19, i32 1\l  \
store double %424, ptr %425, align 8\l  %426 = fsub double %190, %358\l  %427 = getelementptr inbounds %struct.COMPLEX, ptr %.0637638, \
i64 %21\l  store double %426, ptr %427, align 8\l  %428 = fadd double %191, %357\l  %429 = getelementptr inbounds %struct.COMPLEX, \
ptr %.0637638, i64 %21, i32 1\l  store double %428, ptr %429, align 8\l  %430 = fmul double %365, 0xBFD87DE2A6AEA312\l  %431 = tail \
call double @llvm.fmuladd.f64(double %366, double\l... 0x3FED906BCF32832F, double %430)\l  %432 = fmul double %366, 0x3FD87DE2A6AEA312\l  %\
433 = tail call double @llvm.fmuladd.f64(double %365, double\l... 0x3FED906BCF32832F, double %432)\l  %434 = fadd double %198, %\
431\l  %435 = getelementptr inbounds %struct.COMPLEX, ptr %.0637638, i64 %34\l  store double %434, ptr %435, align 8\l  %436 = fsub \
double %199, %433\l  %437 = getelementptr inbounds %struct.COMPLEX, ptr %.0637638, i64 %34, i32 1\l  store double %436, ptr %437, \
align 8\l  %438 = fsub double %198, %431\l  %439 = getelementptr inbounds %struct.COMPLEX, ptr %.0637638, i64 %36\l  store double %\
438, ptr %439, align 8\l  %440 = fadd double %199, %433\l  %441 = getelementptr inbounds %struct.COMPLEX, ptr %.0637638, i64 %36, \
i32 1\l  store double %440, ptr %441, align 8\l  %442 = fsub double %370, %369\l  %443 = fmul double %442, 0x3FE6A09E667F4BB8\l  %\
444 = fadd double %369, %370\l  %445 = fmul double %444, 0x3FE6A09E667F4BB8\l  %446 = fadd double %202, %443\l  %447 = getelementptr \
inbounds %struct.COMPLEX, ptr %.0637638, i64 %27\l  store double %446, ptr %447, align 8\l  %448 = fsub double %203, %445\l  %449 = \
getelementptr inbounds %struct.COMPLEX, ptr %.0637638, i64 %27, i32 1\l  store double %448, ptr %449, align 8\l  %450 = fsub double %\
202, %443\l  %451 = getelementptr inbounds %struct.COMPLEX, ptr %.0637638, i64 %29\l  store double %450, ptr %451, align 8\l  %452 = \
fadd double %203, %445\l  %453 = getelementptr inbounds %struct.COMPLEX, ptr %.0637638, i64 %29, i32 1\l  store double %452, ptr %\
453, align 8\l  %454 = fmul double %377, 0xBFED906BCF32832F\l  %455 = tail call double @llvm.fmuladd.f64(double %378, double\l... \
0x3FD87DE2A6AEA312, double %454)\l  %456 = fmul double %378, 0x3FED906BCF32832F\l  %457 = tail call double @llvm.fmuladd.f64(double %\
377, double\l... 0x3FD87DE2A6AEA312, double %456)\l  %458 = fadd double %210, %455\l  %459 = getelementptr inbounds %struct.COMPLEX, \
ptr %.0637638, i64 %42\l  store double %458, ptr %459, align 8\l  %460 = fsub double %211, %457\l  %461 = getelementptr inbounds %\
struct.COMPLEX, ptr %.0637638, i64 %42, i32 1\l  store double %460, ptr %461, align 8\l  %462 = fsub double %210, %455\l  %463 = \
getelementptr inbounds %struct.COMPLEX, ptr %.0637638, i64 %44\l  store double %462, ptr %463, align 8\l  %464 = fadd double %211, %\
457\l  %465 = getelementptr inbounds %struct.COMPLEX, ptr %.0637638, i64 %44, i32 1\l  store double %464, ptr %465, align 8\l  %\
indvars.iv.next642 = add nsw i64 %indvars.iv641, 1\l  %indvars.iv.next = add i64 %indvars.iv, %46\l  %466 = getelementptr inbounds %\
struct.COMPLEX, ptr %.0637638, i64 1\l  %exitcond.not = icmp eq i64 %indvars.iv.next642, %wide.trip.count\l  br i1 %exitcond.not, \
label %.loopexit, label %47, !llvm.loop !4\l|{<s0>T|<s1>F}}" filled record #3d50c3ff #be242e70
edge Node0x295a1790 Node0x295fa420 4 13.431 124.54 13.431 124.43 13.431 124.3 13.431 124.17 solid black
edge Node0x295fa420 Node0x2960f9f0 4 10.944 122.59 9.9624 122.59 8.9318 122.15 8.2 121.74 solid black
edge Node0x295fa420 Node0x2960fa40 4 14.667 122.44 14.642 122.32 14.622 122.19 14.607 122.07 solid black
edge Node0x2960f9f0 Node0x29729260 4 5.9028 120.49 5.9028 120.29 5.8962 120.09 5.8843 119.88 solid black
edge Node0x2960f9f0 Node0x2964e400 7 9.7917 120.66 10.574 120.66 10.029 8.6443 9.5417 8.0325 9.2137 7.6205 7.796 7.3986 6.8686 7.2951 solid black
edge Node0x2960fa40 Node0x295fa420 4 14.741 121.93 14.73 122.05 14.715 122.17 14.694 122.29 solid black
edge Node0x29729260 Node0x296103d0 4 5.1255 111.8 5.1243 111.68 5.123 111.56 5.1217 111.43 solid black
edge Node0x296103d0 Node0x2964e400 4 2.2917 8.0325 2.2917 7.4396 4.1048 7.2784 5.2096 7.2352 solid black
edge Node0x296103d0 Node0x296103d0 7 6.8938 8.0392 8.4934 -4.9183 9.4167 -4.7672 9.4167 33.928 9.4167 40.386 9.3276 45.77 9.1718 50.199 solid black
stop
