graph 1 19.34 68.264
node Node0x1fe301e0 9.375 66.632 5.8472 3.2639 "{8:\l|  %9 = lshr i32 %3, 1\l  %10 = sub i32 %5, %9\l  %11 = shl i32 %10, 3\l  %12 = zext i32 %11 to i64\l  %13 = sub i32 %6, %9\l  %\
14 = shl i32 %13, 3\l  %15 = zext i32 %14 to i64\l  %16 = sub i32 %4, %9\l  %17 = shl i32 %16, 3\l  %18 = zext i32 %17 to i64\l  %\
19 = icmp ult i32 %3, 17\l  br i1 %19, label %20, label %.preheader300.lr.ph\l|{<s0>T|<s1>F}}" filled record #3d50c3ff #e8765c70
node Node0x1fe34910 4.6389 50.833 9.2778 1.2778 "{20:\l|  tail call void @MultiplyByDivideAndConquer(ptr noundef %0, ptr noundef %1,\l... ptr noundef %2, i32 noundef %3, i32 noundef %\
4, i32 noundef %5, i32 noundef\l... %6, i32 noundef 0)\l  br label %194\l}" filled record #3d50c3ff #ec7f6370
node Node0x1fe3c050 12.681 58.34 6.7639 12.319 "{.preheader300.lr.ph:\l|  %21 = shl i32 %9, 3\l  %22 = mul i32 %21, %9\l  %23 = add i32 %22, 32\l  %24 = zext nneg i32 %9 to i64\l  %\
25 = getelementptr inbounds double, ptr %1, i64 %24\l  %26 = getelementptr inbounds double, ptr %0, i64 %24\l  %27 = mul i32 %9, %\
5\l  %28 = zext i32 %27 to i64\l  %29 = getelementptr inbounds double, ptr %1, i64 %28\l  %30 = mul i32 %9, %6\l  %31 = zext i32 %\
30 to i64\l  %32 = getelementptr inbounds double, ptr %2, i64 %31\l  %33 = mul i32 %9, %4\l  %34 = zext i32 %33 to i64\l  %35 = \
getelementptr inbounds double, ptr %0, i64 %34\l  %36 = getelementptr inbounds double, ptr %29, i64 %24\l  %37 = getelementptr inbounds \
double, ptr %32, i64 %24\l  %38 = getelementptr inbounds double, ptr %35, i64 %24\l  %39 = mul i32 %23, 11\l  %40 = zext i32 %39 \
to i64\l  %41 = tail call noalias ptr @malloc(i64 noundef %40) #15\l  %42 = ptrtoint ptr %41 to i64\l  %43 = and i64 %42, 31\l  %\
.not = icmp eq i64 %43, 0\l  %44 = and i64 %42, -32\l  %45 = add i64 %44, 32\l  %46 = inttoptr i64 %45 to ptr\l  %.0295 = select \
i1 %.not, ptr %41, ptr %46\l  %47 = zext i32 %23 to i64\l  %48 = getelementptr inbounds i8, ptr %.0295, i64 %47\l  %49 = getelementptr \
inbounds i8, ptr %48, i64 %47\l  %50 = getelementptr inbounds i8, ptr %49, i64 %47\l  %51 = getelementptr inbounds i8, ptr %50, \
i64 %47\l  %52 = getelementptr inbounds i8, ptr %51, i64 %47\l  %53 = getelementptr inbounds i8, ptr %52, i64 %47\l  %54 = getelementptr \
inbounds i8, ptr %53, i64 %47\l  %55 = getelementptr inbounds i8, ptr %54, i64 %47\l  %56 = getelementptr inbounds i8, ptr %55, \
i64 %47\l  %57 = getelementptr inbounds i8, ptr %56, i64 %47\l  %58 = getelementptr inbounds double, ptr %2, i64 %24\l  %59 = ptrtoint \
ptr %25 to i64\l  %60 = ptrtoint ptr %29 to i64\l  %61 = ptrtoint ptr %36 to i64\l  %62 = ptrtoint ptr %.0295 to i64\l  %63 = ptrtoint \
ptr %1 to i64\l  %64 = ptrtoint ptr %48 to i64\l  %65 = ptrtoint ptr %50 to i64\l  %66 = ptrtoint ptr %37 to i64\l  %67 = ptrtoint \
ptr %58 to i64\l  %68 = ptrtoint ptr %2 to i64\l  %69 = ptrtoint ptr %51 to i64\l  %70 = ptrtoint ptr %52 to i64\l  %71 = ptrtoint \
ptr %32 to i64\l  %72 = ptrtoint ptr %54 to i64\l  %73 = ptrtoint ptr %49 to i64\l  %74 = ptrtoint ptr %53 to i64\l  br label %.preheader300.us\l}" filled record #3d50c3ff #ec7f6370
node Node0x1fe31c10 7 0.64583 1.1528 0.65278 "{194:\l|  ret void\l}" filled record #3d50c3ff #e8765c70
node Node0x1fe34fb0 14.111 50.833 9.1667 1.6944 "{.preheader300.us:\l|  %.0275310.us = phi i32 [ 0, %.preheader300.lr.ph ], [ %134,\l... %._crit_edge.us ]\l  %.0289309.us = phi \
i64 [ 0, %.preheader300.lr.ph ], [ %128, %._crit_edge.us ]\l  %.0291308.us = phi i64 [ 0, %.preheader300.lr.ph ], [ %132, %._crit_\
edge.us ]\l  %.0293307.us = phi i64 [ 0, %.preheader300.lr.ph ], [ %133, %._crit_edge.us ]\l  br label %75\l}" filled record #3d50c3ff #d6524470
node Node0x1fe2b540 11.569 41.812 8.7083 15.347 "{75:\l|  %.0273304.us = phi i32 [ 0, %.preheader300.us ], [ %131, %75 ]\l  %.1290303.us = phi i64 [ %.0289309.us, %.preheader300.us ], [ %\
128, %75 ]\l  %.1292302.us = phi i64 [ %.0291308.us, %.preheader300.us ], [ %129, %75 ]\l  %.1294301.us = phi i64 [ %.0293307.us, %\
.preheader300.us ], [ %130, %75 ]\l  %76 = add i64 %.1292302.us, %59\l  %77 = inttoptr i64 %76 to ptr\l  %78 = load double, ptr %\
77, align 8\l  %79 = add i64 %.1292302.us, %60\l  %80 = inttoptr i64 %79 to ptr\l  %81 = load double, ptr %80, align 8\l  %82 = \
add i64 %.1292302.us, %61\l  %83 = inttoptr i64 %82 to ptr\l  %84 = load double, ptr %83, align 8\l  %85 = fadd double %81, %84\l  %\
86 = add i64 %.1290303.us, %62\l  %87 = inttoptr i64 %86 to ptr\l  store double %85, ptr %87, align 8\l  %88 = add i64 %.1292302.us, %\
63\l  %89 = inttoptr i64 %88 to ptr\l  %90 = load double, ptr %89, align 8\l  %91 = fsub double %85, %90\l  %92 = add i64 %.1290303.us, %\
64\l  %93 = inttoptr i64 %92 to ptr\l  store double %91, ptr %93, align 8\l  %94 = fsub double %78, %91\l  %95 = add i64 %.1290303.us, %\
65\l  %96 = inttoptr i64 %95 to ptr\l  store double %94, ptr %96, align 8\l  %97 = add i64 %.1294301.us, %66\l  %98 = inttoptr i64 %\
97 to ptr\l  %99 = load double, ptr %98, align 8\l  %100 = add i64 %.1294301.us, %67\l  %101 = inttoptr i64 %100 to ptr\l  %102 = \
load double, ptr %101, align 8\l  %103 = add i64 %.1294301.us, %68\l  %104 = inttoptr i64 %103 to ptr\l  %105 = load double, ptr %\
104, align 8\l  %106 = fsub double %102, %105\l  %107 = add i64 %.1290303.us, %69\l  %108 = inttoptr i64 %107 to ptr\l  store double %\
106, ptr %108, align 8\l  %109 = fsub double %99, %106\l  %110 = add i64 %.1290303.us, %70\l  %111 = inttoptr i64 %110 to ptr\l  \
store double %109, ptr %111, align 8\l  %112 = add i64 %.1294301.us, %71\l  %113 = inttoptr i64 %112 to ptr\l  %114 = load double, \
ptr %113, align 8\l  %115 = fsub double %109, %114\l  %116 = add i64 %.1290303.us, %72\l  %117 = inttoptr i64 %116 to ptr\l  store \
double %115, ptr %117, align 8\l  %118 = load double, ptr %89, align 8\l  %119 = load double, ptr %80, align 8\l  %120 = fsub double %\
118, %119\l  %121 = add i64 %.1290303.us, %73\l  %122 = inttoptr i64 %121 to ptr\l  store double %120, ptr %122, align 8\l  %123 = \
load double, ptr %98, align 8\l  %124 = load double, ptr %101, align 8\l  %125 = fsub double %123, %124\l  %126 = add i64 %.1290303.us, %\
74\l  %127 = inttoptr i64 %126 to ptr\l  store double %125, ptr %127, align 8\l  %128 = add i64 %.1290303.us, 8\l  %129 = add i64 %\
.1292302.us, 8\l  %130 = add i64 %.1294301.us, 8\l  %131 = add nuw nsw i32 %.0273304.us, 1\l  %exitcond.not = icmp eq i32 %131, %\
9\l  br i1 %exitcond.not, label %._crit_edge.us, label %75, !llvm.loop !4\l|{<s0>T|<s1>F}}" filled record #b70d28ff #b70d2870
node Node0x1fe3b1e0 13.153 32.632 7.3333 2.0139 "{._crit_edge.us:\l|  %132 = add i64 %129, %12\l  %133 = add i64 %130, %15\l  %134 = add nuw nsw i32 %.0275310.us, 1\l  %exitcond348.not = \
icmp eq i32 %134, %9\l  br i1 %exitcond348.not, label %.preheader.us.preheader, label\l... %.preheader300.us, !llvm.loop !6\l|{<\
s0>T|<s1>F}}" filled record #3d50c3ff #d6524470
node Node0x1fe46a80 11.319 28.507 9.4028 5.2361 "{.preheader.us.preheader:\l|  %135 = add nsw i32 %7, 1\l  tail call void @OptimizedStrassenMultiply(ptr noundef %55, ptr noundef %\
1,\l... ptr noundef %2, i32 noundef %9, i32 noundef %9, i32 noundef %5, i32 noundef\l... %6, i32 noundef %135)\l  tail call void @\
OptimizedStrassenMultiply(ptr noundef %56, ptr noundef\l... %.0295, ptr noundef %51, i32 noundef %9, i32 noundef %9, i32 noundef %\
9, i32\l... noundef %9, i32 noundef %135)\l  tail call void @OptimizedStrassenMultiply(ptr noundef %57, ptr noundef %48,\l... ptr \
noundef %52, i32 noundef %9, i32 noundef %9, i32 noundef %9, i32 noundef\l... %9, i32 noundef %135)\l  tail call void @OptimizedStrassenMultiply(\
ptr noundef %38, ptr noundef %49,\l... ptr noundef %53, i32 noundef %9, i32 noundef %4, i32 noundef %9, i32 noundef\l... %9, i32 \
noundef %135)\l  tail call void @OptimizedStrassenMultiply(ptr noundef %0, ptr noundef %25,\l... ptr noundef %32, i32 noundef %9, \
i32 noundef %4, i32 noundef %5, i32 noundef\l... %6, i32 noundef %135)\l  tail call void @OptimizedStrassenMultiply(ptr noundef %\
26, ptr noundef %50,\l... ptr noundef %37, i32 noundef %9, i32 noundef %4, i32 noundef %9, i32 noundef\l... %6, i32 noundef %135)\l  \
tail call void @OptimizedStrassenMultiply(ptr noundef %35, ptr noundef %36,\l... ptr noundef %54, i32 noundef %9, i32 noundef %4, \
i32 noundef %5, i32 noundef\l... %9, i32 noundef %135)\l  br label %.preheader.us\l}" filled record #3d50c3ff #ec7f6370
node Node0x1febdef0 11.319 23.396 7.1111 3.9861 "{.preheader.us:\l|  %.0333.us = phi ptr [ %183, %._crit_edge.us335 ], [ %0,\l... %.preheader.us.preheader ]\l  %.1276332.us = phi \
i32 [ %193, %._crit_edge.us335 ], [ 0,\l... %.preheader.us.preheader ]\l  %.0277331.us = phi ptr [ %186, %._crit_edge.us335 ], [ %\
26,\l... %.preheader.us.preheader ]\l  %.0279330.us = phi ptr [ %189, %._crit_edge.us335 ], [ %35,\l... %.preheader.us.preheader ]\l  %\
.0281329.us = phi ptr [ %192, %._crit_edge.us335 ], [ %38,\l... %.preheader.us.preheader ]\l  %.0283328.us = phi ptr [ %173, %._\
crit_edge.us335 ], [ %55,\l... %.preheader.us.preheader ]\l  %.0285327.us = phi ptr [ %172, %._crit_edge.us335 ], [ %56,\l... %.preheader.us.preheader ]\l  %\
.0287326.us = phi ptr [ %174, %._crit_edge.us335 ], [ %57,\l... %.preheader.us.preheader ]\l  br label %136\l}" filled record #3d50c3ff #d6524470
node Node0x1fe52a50 9.2778 14.167 8.4861 13.472 "{136:\l|  %.1319.us = phi ptr [ %.0333.us, %.preheader.us ], [ %175, %136 ]\l  %.1274318.us = phi i32 [ 0, %.preheader.us ], [ %\
179, %136 ]\l  %.1278317.us = phi ptr [ %.0277331.us, %.preheader.us ], [ %176, %136 ]\l  %.1280316.us = phi ptr [ %.0279330.us, %\
.preheader.us ], [ %177, %136 ]\l  %.1282315.us = phi ptr [ %.0281329.us, %.preheader.us ], [ %178, %136 ]\l  %.1284314.us = phi \
ptr [ %.0283328.us, %.preheader.us ], [ %173, %136 ]\l  %.1286313.us = phi ptr [ %.0285327.us, %.preheader.us ], [ %172, %136 ]\l  %\
.1288312.us = phi ptr [ %.0287326.us, %.preheader.us ], [ %174, %136 ]\l  %137 = getelementptr inbounds double, ptr %.1286313.us, \
i64 2\l  %138 = getelementptr inbounds double, ptr %.1284314.us, i64 2\l  %139 = getelementptr inbounds double, ptr %.1288312.us, \
i64 2\l  %140 = getelementptr inbounds double, ptr %.1282315.us, i64 2\l  %141 = load \<2 x double\>, ptr %.1284314.us, align 8\l  %\
142 = load \<2 x double\>, ptr %.1319.us, align 8\l  %143 = fadd \<2 x double\> %141, %142\l  %144 = getelementptr inbounds double, \
ptr %.1319.us, i64 2\l  %145 = load \<2 x double\>, ptr %138, align 8\l  %146 = load \<2 x double\>, ptr %144, align 8\l  %147 = \
fadd \<2 x double\> %145, %146\l  %148 = load \<2 x double\>, ptr %.1286313.us, align 8\l  %149 = load \<2 x double\>, ptr %.1288312.us, \
align 8\l  %150 = fadd \<2 x double\> %141, %149\l  %151 = fadd \<2 x double\> %148, %150\l  %152 = getelementptr inbounds double, \
ptr %.1278317.us, i64 2\l  %153 = load \<2 x double\>, ptr %137, align 8\l  %154 = load \<2 x double\>, ptr %139, align 8\l  %155 = \
fadd \<2 x double\> %145, %154\l  %156 = fadd \<2 x double\> %153, %155\l  %157 = load \<2 x double\>, ptr %.1282315.us, align 8\l  %\
158 = fadd \<2 x double\> %150, %157\l  %159 = fadd \<2 x double\> %148, %158\l  %160 = load \<2 x double\>, ptr %140, align 8\l  %\
161 = fadd \<2 x double\> %155, %160\l  store \<2 x double\> %143, ptr %.1319.us, align 8\l  store \<2 x double\> %147, ptr %144, \
align 8\l  %162 = load \<2 x double\>, ptr %.1278317.us, align 8\l  %163 = fadd \<2 x double\> %151, %162\l  store \<2 x double\> %\
163, ptr %.1278317.us, align 8\l  %164 = load \<2 x double\>, ptr %152, align 8\l  %165 = fadd \<2 x double\> %156, %164\l  store \<\
2 x double\> %165, ptr %152, align 8\l  store \<2 x double\> %159, ptr %.1282315.us, align 8\l  %166 = fadd \<2 x double\> %153, %\
161\l  store \<2 x double\> %166, ptr %140, align 8\l  %167 = load \<2 x double\>, ptr %.1280316.us, align 8\l  %168 = fsub \<2 \
x double\> %158, %167\l  store \<2 x double\> %168, ptr %.1280316.us, align 8\l  %169 = getelementptr inbounds double, ptr %.1280316.us, \
i64 2\l  %170 = load \<2 x double\>, ptr %169, align 8\l  %171 = fsub \<2 x double\> %161, %170\l  store \<2 x double\> %171, ptr %\
169, align 8\l  %172 = getelementptr inbounds double, ptr %.1286313.us, i64 4\l  %173 = getelementptr inbounds double, ptr %.1284314.us, \
i64 4\l  %174 = getelementptr inbounds double, ptr %.1288312.us, i64 4\l  %175 = getelementptr inbounds double, ptr %.1319.us, i64 \
4\l  %176 = getelementptr inbounds double, ptr %.1278317.us, i64 4\l  %177 = getelementptr inbounds double, ptr %.1280316.us, i64 \
4\l  %178 = getelementptr inbounds double, ptr %.1282315.us, i64 4\l  %179 = add nuw i32 %.1274318.us, 4\l  %180 = icmp ult i32 %\
179, %9\l  br i1 %180, label %136, label %._crit_edge.us335, !llvm.loop !7\l|{<s0>T|<s1>F}}" filled record #b70d28ff #b70d2870
node Node0x1fec4ed0 11.403 4.8819 8.1389 4.0972 "{._crit_edge.us335:\l|  %181 = ptrtoint ptr %175 to i64\l  %182 = add i64 %181, %18\l  %183 = inttoptr i64 %182 to ptr\l  %184 = \
ptrtoint ptr %176 to i64\l  %185 = add i64 %184, %18\l  %186 = inttoptr i64 %185 to ptr\l  %187 = ptrtoint ptr %177 to i64\l  %188 = \
add i64 %187, %18\l  %189 = inttoptr i64 %188 to ptr\l  %190 = ptrtoint ptr %178 to i64\l  %191 = add i64 %190, %18\l  %192 = inttoptr \
i64 %191 to ptr\l  %193 = add nuw nsw i32 %.1276332.us, 1\l  %exitcond349.not = icmp eq i32 %193, %9\l  br i1 %exitcond349.not, \
label %._crit_edge334, label %.preheader.us,\l... !llvm.loop !8\l|{<s0>T|<s1>F}}" filled record #3d50c3ff #d6524470
node Node0x1fe46600 8.4306 1.9028 4.9306 0.86111 "{._crit_edge334:\l|  tail call void @free(ptr noundef %41) #16\l  br label %194\l}" filled record #3d50c3ff #ec7f6370
edge Node0x1fe301e0 Node0x1fe34910 4 7.9028 65 7.9028 59.757 5.7495 53.694 4.9409 51.602 solid black
edge Node0x1fe301e0 Node0x1fe3c050 4 12.319 65.16 12.846 65.16 13.2 64.954 13.426 64.615 solid black
edge Node0x1fe34910 Node0x1fe31c10 13 4.6389 50.2 4.6389 47.886 4.6389 39.532 4.6389 32.646 4.6389 32.646 4.6389 32.646 4.6389 4.8681 4.6389 3.2682 4.8647 2.7455 5.8333 1.4722 5.9596 1.3062 6.1296 1.1613 6.3008 1.0416 solid black
edge Node0x1fe3c050 Node0x1fe34fb0 4 13.855 52.184 13.88 52.053 13.904 51.929 13.926 51.813 solid black
edge Node0x1fe34fb0 Node0x1fe2b540 4 13.877 49.99 13.844 49.875 13.809 49.75 13.771 49.616 solid black
edge Node0x1fe2b540 Node0x1fe2b540 7 13.857 34.144 15.326 32.052 16.174 32.189 16.174 38.056 16.174 39.024 16.094 39.837 15.953 40.509 solid black
edge Node0x1fe2b540 Node0x1fe3b1e0 4 9.3889 34.139 9.3889 33.988 9.4944 33.846 9.67 33.714 solid black
edge Node0x1fe3b1e0 Node0x1fe34fb0 7 16.833 31.785 20.769 31.785 18.29 46.088 16.306 49.486 16.217 49.638 16.103 49.775 15.975 49.897 solid black
edge Node0x1fe3b1e0 Node0x1fe46a80 4 11.319 31.625 11.319 31.506 11.319 31.384 11.319 31.26 solid black
edge Node0x1fe46a80 Node0x1febdef0 4 11.319 25.896 11.319 25.77 11.319 25.645 11.319 25.522 solid black
edge Node0x1febdef0 Node0x1fe52a50 4 10.881 21.408 10.855 21.288 10.827 21.164 10.799 21.037 solid black
edge Node0x1fe52a50 Node0x1fe52a50 7 7.0442 7.4325 5.6131 5.295 4.7847 5.4281 4.7847 10.882 4.7847 11.79 4.8637 12.55 5.0025 13.177 solid black
edge Node0x1fe52a50 Node0x1fec4ed0 4 11.403 7.4306 11.403 7.3135 11.403 7.1935 11.403 7.0723 solid black
edge Node0x1fec4ed0 Node0x1febdef0 7 15.486 2.9931 23.488 2.9931 17.078 13.671 13.653 20.903 13.59 21.034 13.519 21.164 13.439 21.29 solid black
edge Node0x1fec4ed0 Node0x1fe46600 4 9.3611 2.8333 9.3611 2.6838 9.2994 2.5505 9.2077 2.435 solid black
edge Node0x1fe46600 Node0x1fe31c10 4 7.9502 1.4762 7.7948 1.3426 7.6227 1.1947 7.4681 1.0619 solid black
stop
