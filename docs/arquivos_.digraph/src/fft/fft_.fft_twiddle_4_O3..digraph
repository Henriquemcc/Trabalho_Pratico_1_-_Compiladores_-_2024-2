graph 1 16.167 32.757
node Node0x2e2259c0 8.7639 32.062 7.2222 1.3889 "{8:\l|  %9 = sub nsw i32 %1, %0\l  %10 = icmp slt i32 %9, 128\l  br i1 %10, label %tailrecurse._crit_edge, label %tailrecurse\l|{<\
s0>T|<s1>F}}" filled record #3d50c3ff #d0473d70
node Node0x2e0d8db0 7.5972 27.034 6.4167 1.3889 "{tailrecurse._crit_edge:\l|  %.tr.lcssa = phi i32 [ %0, %8 ], [ %92, %tailrecurse ]\l  %11 = icmp slt i32 %.tr.lcssa, %1\l  br i1 %\
11, label %.lr.ph145, label %._crit_edge\l|{<s0>T|<s1>F}}" filled record #3d50c3ff #d0473d70
node Node0x2e0da4e0 11.278 29.548 9.2778 2.6389 "{tailrecurse:\l|  %.tr141 = phi i32 [ %92, %tailrecurse ], [ %0, %8 ]\l  %91 = add nsw i32 %.tr141, %1\l  %92 = sdiv i32 %91, 2\l  \
tail call void @fft_twiddle_4(i32 noundef %.tr141, i32 noundef %92, ptr\l... noundef %2, ptr noundef %3, ptr noundef %4, i32 noundef %\
5, i32 noundef %6,\l... i32 noundef %7)\l  %93 = sub nsw i32 %1, %92\l  %94 = icmp slt i32 %93, 128\l  br i1 %94, label %tailrecurse._\
crit_edge, label %tailrecurse\l|{<s0>T|<s1>F}}" filled record #b70d28ff #b70d2870
node Node0x2e0d7e00 5.0139 24.368 7.3333 2.9444 "{.lr.ph145:\l|  %12 = sext i32 %.tr.lcssa to i64\l  %13 = getelementptr inbounds %struct.COMPLEX, ptr %3, i64 %12\l  %14 = mul i32 %\
.tr.lcssa, %6\l  %15 = shl nsw i32 %7, 1\l  %16 = sext i32 %15 to i64\l  %17 = sext i32 %7 to i64\l  %18 = mul nsw i32 %7, 3\l  %\
19 = sext i32 %18 to i64\l  %20 = sext i32 %14 to i64\l  %21 = sext i32 %6 to i64\l  %wide.trip.count = sext i32 %1 to i64\l  br \
label %22\l}" filled record #3d50c3ff #d6524470
node Node0x2e0e7350 5.9722 1.0135 1.6111 0.65278 "{._crit_edge:\l|  ret void\l}" filled record #3d50c3ff #d0473d70
node Node0x2e0db640 4.5278 12.118 9.0556 20.556 "{22:\l|  %indvars.iv146 = phi i64 [ %12, %.lr.ph145 ], [ %indvars.iv.next147, %22 ]\l  %indvars.iv = phi i64 [ %20, %.lr.ph145 ], [ %\
indvars.iv.next, %22 ]\l  %.0133142 = phi ptr [ %13, %.lr.ph145 ], [ %90, %22 ]\l  %23 = getelementptr inbounds %struct.COMPLEX, \
ptr %2, i64 %indvars.iv146\l  %24 = trunc i64 %indvars.iv to i32\l  %25 = shl nsw i32 %24, 1\l  %26 = sext i32 %25 to i64\l  %27 = \
getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %26\l  %28 = getelementptr inbounds %struct.COMPLEX, ptr %23, i64 %16\l  %29 = \
load double, ptr %28, align 8\l  %30 = getelementptr inbounds %struct.COMPLEX, ptr %23, i64 %16, i32 1\l  %31 = load double, ptr %\
30, align 8\l  %32 = getelementptr inbounds %struct.COMPLEX, ptr %4, i64 %indvars.iv\l  %33 = getelementptr inbounds %struct.COMPLEX, \
ptr %23, i64 %17\l  %34 = load double, ptr %33, align 8\l  %35 = getelementptr inbounds %struct.COMPLEX, ptr %23, i64 %17, i32 1\l  %\
36 = load double, ptr %35, align 8\l  %37 = mul nsw i64 %indvars.iv, 3\l  %38 = getelementptr inbounds %struct.COMPLEX, ptr %4, \
i64 %37\l  %39 = getelementptr inbounds %struct.COMPLEX, ptr %23, i64 %19\l  %40 = load double, ptr %39, align 8\l  %41 = getelementptr \
inbounds %struct.COMPLEX, ptr %23, i64 %19, i32 1\l  %42 = load double, ptr %41, align 8\l  %43 = getelementptr inbounds %struct.COMPLEX, \
ptr %.0133142, i64 %16\l  %44 = getelementptr inbounds %struct.COMPLEX, ptr %.0133142, i64 %17\l  %45 = getelementptr inbounds %\
struct.COMPLEX, ptr %.0133142, i64 %19\l  %46 = load \<2 x double\>, ptr %23, align 8\l  %47 = load \<2 x double\>, ptr %27, align \
8\l  %48 = insertelement \<2 x double\> poison, double %31, i64 0\l  %49 = shufflevector \<2 x double\> %48, \<2 x double\> poison, \<\
2 x i32\>\l... zeroinitializer\l  %50 = fneg \<2 x double\> %47\l  %51 = shufflevector \<2 x double\> %47, \<2 x double\> %50, \<\
2 x i32\> \<i32 0,\l... i32 3\>\l  %52 = fmul \<2 x double\> %49, %51\l  %53 = shufflevector \<2 x double\> %52, \<2 x double\> \
poison, \<2 x i32\> \<i32 1,\l... i32 0\>\l  %54 = insertelement \<2 x double\> poison, double %29, i64 0\l  %55 = shufflevector \<\
2 x double\> %54, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %56 = tail call \<2 x double\> @llvm.fmuladd.v2f64(\<\
2 x double\> %47, \<2 x\l... double\> %55, \<2 x double\> %53)\l  %57 = fsub \<2 x double\> %46, %56\l  %58 = load \<2 x double\>, \
ptr %32, align 8\l  %59 = shufflevector \<2 x double\> %58, \<2 x double\> poison, \<2 x i32\> \<i32 1,\l... i32 0\>\l  %60 = extractelement \<\
2 x double\> %58, i64 1\l  %61 = fneg double %60\l  %62 = insertelement \<2 x double\> poison, double %36, i64 0\l  %63 = shufflevector \<\
2 x double\> %62, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %64 = insertelement \<2 x double\> %58, double %61, \
i64 1\l  %65 = fmul \<2 x double\> %63, %64\l  %66 = insertelement \<2 x double\> poison, double %34, i64 0\l  %67 = shufflevector \<\
2 x double\> %66, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %68 = tail call \<2 x double\> @llvm.fmuladd.v2f64(\<\
2 x double\> %59, \<2 x\l... double\> %67, \<2 x double\> %65)\l  %69 = load \<2 x double\>, ptr %38, align 8\l  %70 = shufflevector \<\
2 x double\> %69, \<2 x double\> poison, \<2 x i32\> \<i32 1,\l... i32 0\>\l  %71 = extractelement \<2 x double\> %69, i64 1\l  %\
72 = fneg double %71\l  %73 = insertelement \<2 x double\> poison, double %42, i64 0\l  %74 = shufflevector \<2 x double\> %73, \<\
2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %75 = insertelement \<2 x double\> %69, double %72, i64 1\l  %76 = fmul \<\
2 x double\> %74, %75\l  %77 = insertelement \<2 x double\> poison, double %40, i64 0\l  %78 = shufflevector \<2 x double\> %77, \<\
2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %79 = tail call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %70, \<\
2 x\l... double\> %78, \<2 x double\> %76)\l  %80 = fsub \<2 x double\> %68, %79\l  %81 = fadd \<2 x double\> %46, %56\l  %82 = \
fadd \<2 x double\> %68, %79\l  %83 = shufflevector \<2 x double\> %82, \<2 x double\> poison, \<2 x i32\> \<i32 1,\l... i32 0\>\l  %\
84 = fadd \<2 x double\> %81, %83\l  store \<2 x double\> %84, ptr %.0133142, align 8\l  %85 = fsub \<2 x double\> %81, %83\l  store \<\
2 x double\> %85, ptr %43, align 8\l  %86 = fadd \<2 x double\> %57, %80\l  %87 = fsub \<2 x double\> %57, %80\l  %88 = shufflevector \<\
2 x double\> %86, \<2 x double\> %87, \<2 x i32\> \<i32 0,\l... i32 3\>\l  store \<2 x double\> %88, ptr %44, align 8\l  %89 = shufflevector \<\
2 x double\> %87, \<2 x double\> %86, \<2 x i32\> \<i32 0,\l... i32 3\>\l  store \<2 x double\> %89, ptr %45, align 8\l  %indvars.iv.next147 = \
add nsw i64 %indvars.iv146, 1\l  %indvars.iv.next = add i64 %indvars.iv, %21\l  %90 = getelementptr inbounds %struct.COMPLEX, ptr %\
.0133142, i64 1\l  %exitcond.not = icmp eq i64 %indvars.iv.next147, %wide.trip.count\l  br i1 %exitcond.not, label %._crit_edge, \
label %22, !llvm.loop !4\l|{<s0>T|<s1>F}}" filled record #b70d28ff #b70d2870
edge Node0x2e2259c0 Node0x2e0d8db0 10 6.9583 31.368 6.9583 31.07 6.6196 31.146 6.5139 30.868 6.0971 29.771 6.0884 29.322 6.5139 28.229 6.568 28.09 6.6469 27.957 6.7379 27.835 solid black
edge Node0x2e2259c0 Node0x2e0da4e0 4 10.569 31.368 10.569 31.245 10.584 31.121 10.608 30.999 solid black
edge Node0x2e0d8db0 Node0x2e0d7e00 4 5.9861 26.34 5.9861 26.217 5.9706 26.094 5.9435 25.973 solid black
edge Node0x2e0d8db0 Node0x2e0e7350 7 9.2083 26.34 9.2083 15.451 16.193 10.375 9.4306 1.8399 9.1224 1.451 7.8356 1.23 6.922 1.1194 solid black
edge Node0x2e0da4e0 Node0x2e0d8db0 4 6.625 28.395 6.4612 28.395 6.634 28.13 6.8771 27.835 solid black
edge Node0x2e0da4e0 Node0x2e0da4e0 7 14.042 28.235 15.396 27.781 16.167 27.884 16.167 28.972 16.167 29.124 16.114 29.258 16.019 29.373 solid black
edge Node0x2e0d7e00 Node0x2e0db640 4 4.956 22.898 4.9514 22.781 4.9465 22.66 4.9415 22.533 solid black
edge Node0x2e0db640 Node0x2e0e7350 4 2.2639 1.8399 2.2639 1.2761 3.9198 1.103 5.0186 1.0502 solid black
edge Node0x2e0db640 Node0x2e0db640 7 6.8865 1.8435 8.4208 -0.76118 9.3056 -0.60764 9.3056 7.0621 9.3056 8.3172 9.2236 9.371 9.0795 10.244 solid black
stop
